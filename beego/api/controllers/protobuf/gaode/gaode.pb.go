// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: gaode.proto

package gaode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// admerger 约定：Request 内字段不能有重名
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前协议版本号，目前为1
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 此请求的唯一id
	RequestId *string               `protobuf:"bytes,2,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Imp       []*Request_Impression `protobuf:"bytes,3,rep,name=imp" json:"imp,omitempty"`
	Device    *Request_Device       `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	App       *Request_App          `protobuf:"bytes,6,opt,name=app" json:"app,omitempty"`
	User      *Request_User         `protobuf:"bytes,7,opt,name=user" json:"user,omitempty"`
	// 是否必须返回https广告
	HttpsRequired *bool    `protobuf:"varint,8,opt,name=https_required,json=httpsRequired,def=0" json:"https_required,omitempty"`
	IsPreview     *bool    `protobuf:"varint,9,opt,name=is_preview,json=isPreview,def=0" json:"is_preview,omitempty"` // 预览标记
	MsgCid        *string  `protobuf:"bytes,10,opt,name=msg_cid,json=msgCid" json:"msg_cid,omitempty"`
	PressureTest  *string  `protobuf:"bytes,11,opt,name=pressure_test,json=pressureTest" json:"pressure_test,omitempty"`
	SourceFrom    *string  `protobuf:"bytes,12,opt,name=source_from,json=sourceFrom" json:"source_from,omitempty"`
	AjxVersion    *string  `protobuf:"bytes,13,opt,name=ajxVersion" json:"ajxVersion,omitempty"`
	Csid          *string  `protobuf:"bytes,14,opt,name=csid" json:"csid,omitempty"`
	Gsid          *string  `protobuf:"bytes,15,opt,name=gsid" json:"gsid,omitempty"`
	UseLog        *string  `protobuf:"bytes,16,opt,name=use_log,json=useLog" json:"use_log,omitempty"`
	PreviewAdIds  []string `protobuf:"bytes,17,rep,name=preview_ad_ids,json=previewAdIds" json:"preview_ad_ids,omitempty"`
	ApiType       *string  `protobuf:"bytes,18,opt,name=api_type,json=apiType" json:"api_type,omitempty"`
	Cachelist     *string  `protobuf:"bytes,19,opt,name=cachelist" json:"cachelist,omitempty"`
	// repeated BlackInfo blackinfo_list = 20;
	QueryPoi        *string         `protobuf:"bytes,21,opt,name=query_poi,json=queryPoi" json:"query_poi,omitempty"`                      // 用户最近三小时搜索过的poi  json结构
	VehicleInfo     *string         `protobuf:"bytes,22,opt,name=vehicle_info,json=vehicleInfo" json:"vehicle_info,omitempty"`             // 车辆信息 json结构
	ContentCategory *string         `protobuf:"bytes,23,opt,name=content_category,json=contentCategory" json:"content_category,omitempty"` // 通知中心内容分类
	QueryId         *string         `protobuf:"bytes,24,opt,name=query_id,json=queryId" json:"query_id,omitempty"`                         // 通知中心（刷下一页属于同一个query_id）
	KeyWords        *string         `protobuf:"bytes,25,opt,name=key_words,json=keyWords" json:"key_words,omitempty"`                      // 关键词
	Ttag            *string         `protobuf:"bytes,26,opt,name=ttag" json:"ttag,omitempty"`                                              // ttag标签
	CenterPageId    *string         `protobuf:"bytes,27,opt,name=center_page_id,json=centerPageId" json:"center_page_id,omitempty"`        // 资讯翻页
	Attr            []*Request_Attr `protobuf:"bytes,28,rep,name=attr" json:"attr,omitempty"`
	UseLlm          *string         `protobuf:"bytes,29,opt,name=use_llm,json=useLlm,def=false" json:"use_llm,omitempty"`   // 是否使用大模型
	ViewAdcode      *string         `protobuf:"bytes,30,opt,name=view_adcode,json=viewAdcode" json:"view_adcode,omitempty"` // 图面adcode
}

// Default values for Request fields.
const (
	Default_Request_HttpsRequired = bool(false)
	Default_Request_IsPreview     = bool(false)
	Default_Request_UseLlm        = string("false")
)

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Request) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *Request) GetImp() []*Request_Impression {
	if x != nil {
		return x.Imp
	}
	return nil
}

func (x *Request) GetDevice() *Request_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *Request) GetApp() *Request_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Request) GetUser() *Request_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Request) GetHttpsRequired() bool {
	if x != nil && x.HttpsRequired != nil {
		return *x.HttpsRequired
	}
	return Default_Request_HttpsRequired
}

func (x *Request) GetIsPreview() bool {
	if x != nil && x.IsPreview != nil {
		return *x.IsPreview
	}
	return Default_Request_IsPreview
}

func (x *Request) GetMsgCid() string {
	if x != nil && x.MsgCid != nil {
		return *x.MsgCid
	}
	return ""
}

func (x *Request) GetPressureTest() string {
	if x != nil && x.PressureTest != nil {
		return *x.PressureTest
	}
	return ""
}

func (x *Request) GetSourceFrom() string {
	if x != nil && x.SourceFrom != nil {
		return *x.SourceFrom
	}
	return ""
}

func (x *Request) GetAjxVersion() string {
	if x != nil && x.AjxVersion != nil {
		return *x.AjxVersion
	}
	return ""
}

func (x *Request) GetCsid() string {
	if x != nil && x.Csid != nil {
		return *x.Csid
	}
	return ""
}

func (x *Request) GetGsid() string {
	if x != nil && x.Gsid != nil {
		return *x.Gsid
	}
	return ""
}

func (x *Request) GetUseLog() string {
	if x != nil && x.UseLog != nil {
		return *x.UseLog
	}
	return ""
}

func (x *Request) GetPreviewAdIds() []string {
	if x != nil {
		return x.PreviewAdIds
	}
	return nil
}

func (x *Request) GetApiType() string {
	if x != nil && x.ApiType != nil {
		return *x.ApiType
	}
	return ""
}

func (x *Request) GetCachelist() string {
	if x != nil && x.Cachelist != nil {
		return *x.Cachelist
	}
	return ""
}

func (x *Request) GetQueryPoi() string {
	if x != nil && x.QueryPoi != nil {
		return *x.QueryPoi
	}
	return ""
}

func (x *Request) GetVehicleInfo() string {
	if x != nil && x.VehicleInfo != nil {
		return *x.VehicleInfo
	}
	return ""
}

func (x *Request) GetContentCategory() string {
	if x != nil && x.ContentCategory != nil {
		return *x.ContentCategory
	}
	return ""
}

func (x *Request) GetQueryId() string {
	if x != nil && x.QueryId != nil {
		return *x.QueryId
	}
	return ""
}

func (x *Request) GetKeyWords() string {
	if x != nil && x.KeyWords != nil {
		return *x.KeyWords
	}
	return ""
}

func (x *Request) GetTtag() string {
	if x != nil && x.Ttag != nil {
		return *x.Ttag
	}
	return ""
}

func (x *Request) GetCenterPageId() string {
	if x != nil && x.CenterPageId != nil {
		return *x.CenterPageId
	}
	return ""
}

func (x *Request) GetAttr() []*Request_Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *Request) GetUseLlm() string {
	if x != nil && x.UseLlm != nil {
		return *x.UseLlm
	}
	return Default_Request_UseLlm
}

func (x *Request) GetViewAdcode() string {
	if x != nil && x.ViewAdcode != nil {
		return *x.ViewAdcode
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 对应Request中的id
	RequestId *string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// 0-ok，其他值表示无广告返回
	Status          *int32           `protobuf:"varint,2,opt,name=status,def=0" json:"status,omitempty"`
	Seat            []*Response_Seat `protobuf:"bytes,3,rep,name=seat" json:"seat,omitempty"`
	UserTagExpected *bool            `protobuf:"varint,4,opt,name=user_tag_expected,json=userTagExpected,def=0" json:"user_tag_expected,omitempty"` // 期望提供媒体用户标签：默认false-不提供；true-提供
	Source          *int32           `protobuf:"varint,6,opt,name=source" json:"source,omitempty"`                                                  // 标记是Meta还是天擎广告,一次返回中只可能返回Meta或者天擎其中一种广告，1=meta,2=opt
	Priority        *int32           `protobuf:"varint,99,opt,name=priority" json:"priority,omitempty"`                                             // match_server内部使用,根据meta和opt链路进行优选, 临时字段
}

// Default values for Response fields.
const (
	Default_Response_Status          = int32(0)
	Default_Response_UserTagExpected = bool(false)
)

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *Response) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_Response_Status
}

func (x *Response) GetSeat() []*Response_Seat {
	if x != nil {
		return x.Seat
	}
	return nil
}

func (x *Response) GetUserTagExpected() bool {
	if x != nil && x.UserTagExpected != nil {
		return *x.UserTagExpected
	}
	return Default_Response_UserTagExpected
}

func (x *Response) GetSource() int32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *Response) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

// 媒体位信息
type Request_Impression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 媒体位id, 由 ssp 统一分配
	Pid *int32 `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	// 媒体位 name, 由 ssp 统一分配
	Pname *string `protobuf:"bytes,2,req,name=pname" json:"pname,omitempty"`
	// 广告位的宽和高
	Width  *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	// 可以展示的广告数量
	SlotNum *int32 `protobuf:"varint,5,opt,name=slot_num,json=slotNum,def=1" json:"slot_num,omitempty"`
	// 支持的广告创意标识
	CreativeId []string `protobuf:"bytes,6,rep,name=creative_id,json=creativeId" json:"creative_id,omitempty"`
	// 预投放日期, 仅开屏使用，格式:"20160602"
	CampaignDate []string `protobuf:"bytes,7,rep,name=campaign_date,json=campaignDate" json:"campaign_date,omitempty"`
	// RTB的底价，非RTB方式可不填, 单位：分
	BidFloor     *int32   `protobuf:"varint,8,opt,name=bid_floor,json=bidFloor" json:"bid_floor,omitempty"`
	ExternalInfo *string  `protobuf:"bytes,9,opt,name=external_info,json=externalInfo" json:"external_info,omitempty"`
	PageId       *string  `protobuf:"bytes,10,opt,name=page_id,json=pageId" json:"page_id,omitempty"`
	PushEvent    *string  `protobuf:"bytes,11,opt,name=push_event,json=pushEvent" json:"push_event,omitempty"`
	NaviType     *string  `protobuf:"bytes,12,opt,name=navi_type,json=naviType" json:"navi_type,omitempty"`
	ComeFrom     *string  `protobuf:"bytes,13,opt,name=come_from,json=comeFrom" json:"come_from,omitempty"`
	DealId       []string `protobuf:"bytes,14,rep,name=deal_id,json=dealId" json:"deal_id,omitempty"`
}

// Default values for Request_Impression fields.
const (
	Default_Request_Impression_SlotNum = int32(1)
)

func (x *Request_Impression) Reset() {
	*x = Request_Impression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Impression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Impression) ProtoMessage() {}

func (x *Request_Impression) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Impression.ProtoReflect.Descriptor instead.
func (*Request_Impression) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_Impression) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *Request_Impression) GetPname() string {
	if x != nil && x.Pname != nil {
		return *x.Pname
	}
	return ""
}

func (x *Request_Impression) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Request_Impression) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Request_Impression) GetSlotNum() int32 {
	if x != nil && x.SlotNum != nil {
		return *x.SlotNum
	}
	return Default_Request_Impression_SlotNum
}

func (x *Request_Impression) GetCreativeId() []string {
	if x != nil {
		return x.CreativeId
	}
	return nil
}

func (x *Request_Impression) GetCampaignDate() []string {
	if x != nil {
		return x.CampaignDate
	}
	return nil
}

func (x *Request_Impression) GetBidFloor() int32 {
	if x != nil && x.BidFloor != nil {
		return *x.BidFloor
	}
	return 0
}

func (x *Request_Impression) GetExternalInfo() string {
	if x != nil && x.ExternalInfo != nil {
		return *x.ExternalInfo
	}
	return ""
}

func (x *Request_Impression) GetPageId() string {
	if x != nil && x.PageId != nil {
		return *x.PageId
	}
	return ""
}

func (x *Request_Impression) GetPushEvent() string {
	if x != nil && x.PushEvent != nil {
		return *x.PushEvent
	}
	return ""
}

func (x *Request_Impression) GetNaviType() string {
	if x != nil && x.NaviType != nil {
		return *x.NaviType
	}
	return ""
}

func (x *Request_Impression) GetComeFrom() string {
	if x != nil && x.ComeFrom != nil {
		return *x.ComeFrom
	}
	return ""
}

func (x *Request_Impression) GetDealId() []string {
	if x != nil {
		return x.DealId
	}
	return nil
}

// 设备信息
type Request_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ipv4 或者 ipv6 , 客户端真实IP地址
	Ip *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	// 4 表示 ipv4; 6 表示 ipv6; 其他值表示未知
	IpType *int32 `protobuf:"varint,2,opt,name=ip_type,json=ipType" json:"ip_type,omitempty"`
	// user agent，来自http头
	UserAgent *string `protobuf:"bytes,3,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// IOS6.0及以上的idfa号
	Idfa *string `protobuf:"bytes,4,opt,name=idfa" json:"idfa,omitempty"`
	// 安卓设备的imei号
	Imei *string `protobuf:"bytes,5,opt,name=imei" json:"imei,omitempty"`
	// 安卓设备的imei号的md5值,若填写imei原值，则不用填此字段
	ImeiMd5 *string `protobuf:"bytes,6,opt,name=imei_md5,json=imeiMd5" json:"imei_md5,omitempty"`
	// 设备的mac地址
	Mac *string `protobuf:"bytes,7,opt,name=mac" json:"mac,omitempty"`
	// 设备的mac地址的md5值, 若填写mac原值，则不用填此字段
	MacMd5 *string `protobuf:"bytes,8,opt,name=mac_md5,json=macMd5" json:"mac_md5,omitempty"`
	// android_id
	AndroidId *string `protobuf:"bytes,9,opt,name=android_id,json=androidId" json:"android_id,omitempty"`
	// 设备类型，0-手机;1-平板;2-PC;3-互联网电视
	DeviceType *int32 `protobuf:"varint,10,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	// 设备品牌
	// 例如：nokia, samsung
	Brand *string `protobuf:"bytes,11,opt,name=brand" json:"brand,omitempty"`
	// 设备型号
	// 例如：n70, galaxy
	Model *string `protobuf:"bytes,12,opt,name=model" json:"model,omitempty"`
	// 操作系统
	// 例如：Android,iOS
	Os *string `protobuf:"bytes,13,opt,name=os" json:"os,omitempty"`
	// 操作系统版本
	// 例如：7.0.2
	Osv *string `protobuf:"bytes,14,opt,name=osv" json:"osv,omitempty"`
	// 设备网络
	// 例如: cell, wifi
	Net *string `protobuf:"bytes,15,opt,name=net" json:"net,omitempty"`
	// 设备所处网络环境 0-未识别, 1-wifi, 2-2g, 3-3g, 4-4g
	Network *int32 `protobuf:"varint,16,opt,name=network,def=1" json:"network,omitempty"`
	// 设备的网络运营商 0-未知, 1-移动, 2-联通, 3-电信
	Operator *int32 `protobuf:"varint,17,opt,name=operator" json:"operator,omitempty"`
	// 设备屏幕尺寸：宽
	Width *int32 `protobuf:"varint,18,opt,name=width" json:"width,omitempty"`
	// 设备屏幕尺寸：高
	Height *int32 `protobuf:"varint,19,opt,name=height" json:"height,omitempty"`
	// 设备密度，对应于pixel_ratio
	PixelRatio *int32 `protobuf:"varint,20,opt,name=pixel_ratio,json=pixelRatio,def=1000" json:"pixel_ratio,omitempty"`
	// 屏幕方向 0-未知, 1-竖屏, 2-横屏
	Orientation *int32 `protobuf:"varint,21,opt,name=orientation" json:"orientation,omitempty"`
	// 用户所处时区的分钟偏移量
	// 例如：如果是东八区，则 timezone_offset = 60 * 8 = 480.
	TimezoneOffset *int32                `protobuf:"varint,22,opt,name=timezone_offset,json=timezoneOffset,def=480" json:"timezone_offset,omitempty"`
	Geo            []*Request_Device_Geo `protobuf:"bytes,23,rep,name=geo" json:"geo,omitempty"`
	// 用户已安装 app 列表
	InstalledApp []string `protobuf:"bytes,24,rep,name=installed_app,json=installedApp" json:"installed_app,omitempty"`
	// oaid
	Oaid *string `protobuf:"bytes,25,opt,name=oaid" json:"oaid,omitempty"`
	// alibaba AAID
	AliAaid *string `protobuf:"bytes,26,opt,name=ali_aaid,json=aliAaid" json:"ali_aaid,omitempty"`
	// 语言设置
	Language *string `protobuf:"bytes,27,opt,name=language" json:"language,omitempty"`
	// 高德 tid
	Tid      *string `protobuf:"bytes,28,opt,name=tid" json:"tid,omitempty"`
	Openudid *string `protobuf:"bytes,29,opt,name=openudid" json:"openudid,omitempty"`
	// 例如：iPhone13,2
	Mn   *string `protobuf:"bytes,30,opt,name=mn" json:"mn,omitempty"`
	Caid *string `protobuf:"bytes,31,opt,name=caid" json:"caid,omitempty"`
}

// Default values for Request_Device fields.
const (
	Default_Request_Device_Network        = int32(1)
	Default_Request_Device_PixelRatio     = int32(1000)
	Default_Request_Device_TimezoneOffset = int32(480)
)

func (x *Request_Device) Reset() {
	*x = Request_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Device) ProtoMessage() {}

func (x *Request_Device) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Device.ProtoReflect.Descriptor instead.
func (*Request_Device) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Request_Device) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Request_Device) GetIpType() int32 {
	if x != nil && x.IpType != nil {
		return *x.IpType
	}
	return 0
}

func (x *Request_Device) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *Request_Device) GetIdfa() string {
	if x != nil && x.Idfa != nil {
		return *x.Idfa
	}
	return ""
}

func (x *Request_Device) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *Request_Device) GetImeiMd5() string {
	if x != nil && x.ImeiMd5 != nil {
		return *x.ImeiMd5
	}
	return ""
}

func (x *Request_Device) GetMac() string {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return ""
}

func (x *Request_Device) GetMacMd5() string {
	if x != nil && x.MacMd5 != nil {
		return *x.MacMd5
	}
	return ""
}

func (x *Request_Device) GetAndroidId() string {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return ""
}

func (x *Request_Device) GetDeviceType() int32 {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return 0
}

func (x *Request_Device) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *Request_Device) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *Request_Device) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *Request_Device) GetOsv() string {
	if x != nil && x.Osv != nil {
		return *x.Osv
	}
	return ""
}

func (x *Request_Device) GetNet() string {
	if x != nil && x.Net != nil {
		return *x.Net
	}
	return ""
}

func (x *Request_Device) GetNetwork() int32 {
	if x != nil && x.Network != nil {
		return *x.Network
	}
	return Default_Request_Device_Network
}

func (x *Request_Device) GetOperator() int32 {
	if x != nil && x.Operator != nil {
		return *x.Operator
	}
	return 0
}

func (x *Request_Device) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Request_Device) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Request_Device) GetPixelRatio() int32 {
	if x != nil && x.PixelRatio != nil {
		return *x.PixelRatio
	}
	return Default_Request_Device_PixelRatio
}

func (x *Request_Device) GetOrientation() int32 {
	if x != nil && x.Orientation != nil {
		return *x.Orientation
	}
	return 0
}

func (x *Request_Device) GetTimezoneOffset() int32 {
	if x != nil && x.TimezoneOffset != nil {
		return *x.TimezoneOffset
	}
	return Default_Request_Device_TimezoneOffset
}

func (x *Request_Device) GetGeo() []*Request_Device_Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *Request_Device) GetInstalledApp() []string {
	if x != nil {
		return x.InstalledApp
	}
	return nil
}

func (x *Request_Device) GetOaid() string {
	if x != nil && x.Oaid != nil {
		return *x.Oaid
	}
	return ""
}

func (x *Request_Device) GetAliAaid() string {
	if x != nil && x.AliAaid != nil {
		return *x.AliAaid
	}
	return ""
}

func (x *Request_Device) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Request_Device) GetTid() string {
	if x != nil && x.Tid != nil {
		return *x.Tid
	}
	return ""
}

func (x *Request_Device) GetOpenudid() string {
	if x != nil && x.Openudid != nil {
		return *x.Openudid
	}
	return ""
}

func (x *Request_Device) GetMn() string {
	if x != nil && x.Mn != nil {
		return *x.Mn
	}
	return ""
}

func (x *Request_Device) GetCaid() string {
	if x != nil && x.Caid != nil {
		return *x.Caid
	}
	return ""
}

// APP属性
type Request_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 应用包名, 例如：com.moji.MojiWeather
	PackageName *string `protobuf:"bytes,1,opt,name=package_name,json=packageName" json:"package_name,omitempty"`
	// 应用名，例如：高德地图
	AppName *string `protobuf:"bytes,2,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// 客户端渠道
	Dic *string `protobuf:"bytes,3,opt,name=dic" json:"dic,omitempty"`
	// app 大版本，例如：ANDH110100
	Div *string `protobuf:"bytes,4,opt,name=div" json:"div,omitempty"`
	// app 小版本，例如：1802
	Dibv *string `protobuf:"bytes,5,opt,name=dibv" json:"dibv,omitempty"`
	// app 场景:
	// 1 冷启动Amap进入主图
	// 2 在主图从后台切回前台
	// 3 进入消息盒子时
	// 4 主动刷新消息盒子
	// 5 其它页面切后台再切前台
	Scene *string `protobuf:"bytes,6,opt,name=scene" json:"scene,omitempty"`
	// app类目
	Category []string `protobuf:"bytes,7,rep,name=category" json:"category,omitempty"`
	// channel
	Channel *string `protobuf:"bytes,8,opt,name=channel" json:"channel,omitempty"`
	// 首次启动标示
	FirstLoad *int32 `protobuf:"varint,9,opt,name=first_load,json=firstLoad" json:"first_load,omitempty"`
}

func (x *Request_App) Reset() {
	*x = Request_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_App) ProtoMessage() {}

func (x *Request_App) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_App.ProtoReflect.Descriptor instead.
func (*Request_App) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Request_App) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *Request_App) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *Request_App) GetDic() string {
	if x != nil && x.Dic != nil {
		return *x.Dic
	}
	return ""
}

func (x *Request_App) GetDiv() string {
	if x != nil && x.Div != nil {
		return *x.Div
	}
	return ""
}

func (x *Request_App) GetDibv() string {
	if x != nil && x.Dibv != nil {
		return *x.Dibv
	}
	return ""
}

func (x *Request_App) GetScene() string {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return ""
}

func (x *Request_App) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Request_App) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *Request_App) GetFirstLoad() int32 {
	if x != nil && x.FirstLoad != nil {
		return *x.FirstLoad
	}
	return 0
}

// 用户数据
type Request_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登陆用户 user_id
	UserId *string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	// 阿里内部使用
	Aid *string `protobuf:"bytes,2,opt,name=aid" json:"aid,omitempty"`
	// 阿里内部使用
	NickName *string `protobuf:"bytes,3,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	// 阿里内部使用
	ApId     *string                 `protobuf:"bytes,4,opt,name=ap_id,json=apId" json:"ap_id,omitempty"`
	UserTags []*Request_User_UserTag `protobuf:"bytes,5,rep,name=user_tags,json=userTags" json:"user_tags,omitempty"`
	// 阿里内部使用
	Utdid *string `protobuf:"bytes,6,opt,name=utdid" json:"utdid,omitempty"`
	// 高德内部使用, adiu地址
	Adiu *string `protobuf:"bytes,7,opt,name=adiu" json:"adiu,omitempty"`
	// 高德内部使用, cifa 地址
	Cifa *string `protobuf:"bytes,8,opt,name=cifa" json:"cifa,omitempty"`
	// 高德内部使用, adcode地址
	Adcode *string `protobuf:"bytes,9,opt,name=adcode" json:"adcode,omitempty"`
	// 高德内部使用, testid
	TestId *string `protobuf:"bytes,10,opt,name=test_id,json=testId" json:"test_id,omitempty"`
	// 高德内部使用, libra 实验标签
	LibraTag *string `protobuf:"bytes,11,opt,name=libra_tag,json=libraTag" json:"libra_tag,omitempty"`
	// 高德内部使用, libra 实验标签
	LibraSample *string `protobuf:"bytes,12,opt,name=libra_sample,json=libraSample" json:"libra_sample,omitempty"`
	// city_code
	CityCode *string `protobuf:"bytes,13,opt,name=city_code,json=cityCode" json:"city_code,omitempty"`
	// diu3
	Diu3 *string `protobuf:"bytes,14,opt,name=diu3" json:"diu3,omitempty"`
	// diu
	Diu *string `protobuf:"bytes,15,opt,name=diu" json:"diu,omitempty"`
	// diu2
	Diu2 *string `protobuf:"bytes,16,opt,name=diu2" json:"diu2,omitempty"`
}

func (x *Request_User) Reset() {
	*x = Request_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_User) ProtoMessage() {}

func (x *Request_User) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_User.ProtoReflect.Descriptor instead.
func (*Request_User) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Request_User) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *Request_User) GetAid() string {
	if x != nil && x.Aid != nil {
		return *x.Aid
	}
	return ""
}

func (x *Request_User) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *Request_User) GetApId() string {
	if x != nil && x.ApId != nil {
		return *x.ApId
	}
	return ""
}

func (x *Request_User) GetUserTags() []*Request_User_UserTag {
	if x != nil {
		return x.UserTags
	}
	return nil
}

func (x *Request_User) GetUtdid() string {
	if x != nil && x.Utdid != nil {
		return *x.Utdid
	}
	return ""
}

func (x *Request_User) GetAdiu() string {
	if x != nil && x.Adiu != nil {
		return *x.Adiu
	}
	return ""
}

func (x *Request_User) GetCifa() string {
	if x != nil && x.Cifa != nil {
		return *x.Cifa
	}
	return ""
}

func (x *Request_User) GetAdcode() string {
	if x != nil && x.Adcode != nil {
		return *x.Adcode
	}
	return ""
}

func (x *Request_User) GetTestId() string {
	if x != nil && x.TestId != nil {
		return *x.TestId
	}
	return ""
}

func (x *Request_User) GetLibraTag() string {
	if x != nil && x.LibraTag != nil {
		return *x.LibraTag
	}
	return ""
}

func (x *Request_User) GetLibraSample() string {
	if x != nil && x.LibraSample != nil {
		return *x.LibraSample
	}
	return ""
}

func (x *Request_User) GetCityCode() string {
	if x != nil && x.CityCode != nil {
		return *x.CityCode
	}
	return ""
}

func (x *Request_User) GetDiu3() string {
	if x != nil && x.Diu3 != nil {
		return *x.Diu3
	}
	return ""
}

func (x *Request_User) GetDiu() string {
	if x != nil && x.Diu != nil {
		return *x.Diu
	}
	return ""
}

func (x *Request_User) GetDiu2() string {
	if x != nil && x.Diu2 != nil {
		return *x.Diu2
	}
	return ""
}

type Request_Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`   // 属性名
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // 属性值
}

func (x *Request_Attr) Reset() {
	*x = Request_Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Attr) ProtoMessage() {}

func (x *Request_Attr) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Attr.ProtoReflect.Descriptor instead.
func (*Request_Attr) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Request_Attr) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Request_Attr) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Request_Device_Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 枚举: "start_poi", "cur_poi", "end_poi"
	GeoName *string                 `protobuf:"bytes,1,opt,name=geo_name,json=geoName" json:"geo_name,omitempty"`
	Poi     *Request_Device_Geo_Poi `protobuf:"bytes,2,opt,name=poi" json:"poi,omitempty"`
}

func (x *Request_Device_Geo) Reset() {
	*x = Request_Device_Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Device_Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Device_Geo) ProtoMessage() {}

func (x *Request_Device_Geo) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Device_Geo.ProtoReflect.Descriptor instead.
func (*Request_Device_Geo) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Request_Device_Geo) GetGeoName() string {
	if x != nil && x.GeoName != nil {
		return *x.GeoName
	}
	return ""
}

func (x *Request_Device_Geo) GetPoi() *Request_Device_Geo_Poi {
	if x != nil {
		return x.Poi
	}
	return nil
}

type Request_Device_Geo_Poi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 纬度, 取值范围[-90.0 , +90.0]
	Lat *float64 `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	// 经度, 取值范围[-180.0 , +180.0]
	Lng *float64 `protobuf:"fixed64,2,opt,name=lng" json:"lng,omitempty"`
	// 此位置 poiid, 尽可能设值
	Poiid *string `protobuf:"bytes,3,opt,name=poiid" json:"poiid,omitempty"`
	// 此位置 name, 尽可能设值
	Name *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (x *Request_Device_Geo_Poi) Reset() {
	*x = Request_Device_Geo_Poi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_Device_Geo_Poi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_Device_Geo_Poi) ProtoMessage() {}

func (x *Request_Device_Geo_Poi) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_Device_Geo_Poi.ProtoReflect.Descriptor instead.
func (*Request_Device_Geo_Poi) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Request_Device_Geo_Poi) GetLat() float64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *Request_Device_Geo_Poi) GetLng() float64 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

func (x *Request_Device_Geo_Poi) GetPoiid() string {
	if x != nil && x.Poiid != nil {
		return *x.Poiid
	}
	return ""
}

func (x *Request_Device_Geo_Poi) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// 用户标签列表
type Request_User_UserTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户标签分类: 1 - 兴趣标签
	Type *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	// 媒体侧 用户标签ID
	Ids []string `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
}

func (x *Request_User_UserTag) Reset() {
	*x = Request_User_UserTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_User_UserTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_User_UserTag) ProtoMessage() {}

func (x *Request_User_UserTag) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_User_UserTag.ProtoReflect.Descriptor instead.
func (*Request_User_UserTag) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Request_User_UserTag) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Request_User_UserTag) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 一个位置上的广告
type Response_Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指定请求里的impression id
	Pid *int32              `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	Ad  []*Response_Seat_Ad `protobuf:"bytes,2,rep,name=ad" json:"ad,omitempty"`
}

func (x *Response_Seat) Reset() {
	*x = Response_Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Seat) ProtoMessage() {}

func (x *Response_Seat) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Seat.ProtoReflect.Descriptor instead.
func (*Response_Seat) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Response_Seat) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *Response_Seat) GetAd() []*Response_Seat_Ad {
	if x != nil {
		return x.Ad
	}
	return nil
}

// 广告字段
type Response_Seat_Ad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 广告id
	AdId *string `protobuf:"bytes,1,req,name=ad_id,json=adId" json:"ad_id,omitempty"`
	// 广告创意的唯一标识
	CreativeIds *string `protobuf:"bytes,2,opt,name=creative_ids,json=creativeIds" json:"creative_ids,omitempty"`
	// 创意类型: 1 文字 2 图片 3 Flash 4 视频
	CreativeType *int32                   `protobuf:"varint,3,opt,name=creative_type,json=creativeType" json:"creative_type,omitempty"`
	Attr         []*Response_Seat_Ad_Attr `protobuf:"bytes,4,rep,name=attr" json:"attr,omitempty"`
	// 广告行业类目
	Typecode []int32 `protobuf:"varint,5,rep,name=typecode" json:"typecode,omitempty"`
	// 展现反馈地址
	ImpressionTrackingUrl []string `protobuf:"bytes,6,rep,name=impression_tracking_url,json=impressionTrackingUrl" json:"impression_tracking_url,omitempty"`
	// 点击跟踪地址
	ClickTrackingUrl []string `protobuf:"bytes,7,rep,name=click_tracking_url,json=clickTrackingUrl" json:"click_tracking_url,omitempty"`
	// 点击跳转地址 short地址
	ClickThroughUrl *string `protobuf:"bytes,8,opt,name=click_through_url,json=clickThroughUrl" json:"click_through_url,omitempty"`
	// APP唤醒地址
	DeeplinkUrl *string `protobuf:"bytes,9,opt,name=deeplink_url,json=deeplinkUrl" json:"deeplink_url,omitempty"`
	// APP下载地址
	DownloadUrl *string `protobuf:"bytes,10,opt,name=download_url,json=downloadUrl" json:"download_url,omitempty"`
	// 落地页打开方式
	OpenType *int32 `protobuf:"varint,11,opt,name=open_type,json=openType" json:"open_type,omitempty"`
	// 计划投放日期, 仅开屏使用，如:"20160602"
	CampaignDate []string `protobuf:"bytes,12,rep,name=campaign_date,json=campaignDate" json:"campaign_date,omitempty"`
	// 广告来源
	AdSource *string `protobuf:"bytes,13,opt,name=ad_source,json=adSource" json:"ad_source,omitempty"`
	// 广告第一报价,内部使用,单位(分)
	BidPrice *int32 `protobuf:"varint,14,opt,name=bid_price,json=bidPrice" json:"bid_price,omitempty"`
	// 广告结算价,内部使用,单位(分)
	SettlePrice *int32 `protobuf:"varint,15,opt,name=settle_price,json=settlePrice" json:"settle_price,omitempty"`
	// 竞价成功通知，服务端发送
	WinnoticeUrl *string `protobuf:"bytes,16,opt,name=winnotice_url,json=winnoticeUrl" json:"winnotice_url,omitempty"`
	// 部分特殊场景需要，用法联系运营同学
	Type       *int32 `protobuf:"varint,19,opt,name=type" json:"type,omitempty"`
	Displayads *int32 `protobuf:"varint,20,opt,name=displayads" json:"displayads,omitempty"`
	// 落地页类型，url_type: 落地页类型依次表示 H5url:1 , pol详情页:2, scheme:3   无跳转:4  跳出型落地页:5 东风: 7
	UrlType *string `protobuf:"bytes,21,opt,name=url_type,json=urlType" json:"url_type,omitempty"`
	// 广告优先级
	Priority  *int32 `protobuf:"varint,22,opt,name=priority" json:"priority,omitempty"` // 天擎优先级
	IsTopview *int32 `protobuf:"varint,23,opt,name=is_topview,json=isTopview,def=0" json:"is_topview,omitempty"`
	// topview 曝光跟踪地址
	ThirdImpression []string `protobuf:"bytes,24,rep,name=third_impression,json=thirdImpression" json:"third_impression,omitempty"`
	// topview 点击跳转地址
	ThirdClick []string `protobuf:"bytes,25,rep,name=third_click,json=thirdClick" json:"third_click,omitempty"`
	// 点击跳转地址原始地址
	ClickThroughUrlOriginal *string `protobuf:"bytes,26,opt,name=click_through_url_original,json=clickThroughUrlOriginal" json:"click_through_url_original,omitempty"`
	// 广告主ID--东风对应deal_id
	DealId       *string `protobuf:"bytes,27,opt,name=deal_id,json=dealId" json:"deal_id,omitempty"`
	Width        *int32  `protobuf:"varint,28,opt,name=width" json:"width,omitempty"`
	Height       *int32  `protobuf:"varint,29,opt,name=height" json:"height,omitempty"`
	MetaPriority *int32  `protobuf:"varint,30,opt,name=meta_priority,json=metaPriority" json:"meta_priority,omitempty"` // meta优先级
	// RTA模式列表
	// df开屏-creativeid_list
	// rta_type后续约定使用方式,当前只有df开屏
	RtaType    *string  `protobuf:"bytes,40,opt,name=rta_type,json=rtaType" json:"rta_type,omitempty"`
	RtaContent []string `protobuf:"bytes,41,rep,name=rta_content,json=rtaContent" json:"rta_content,omitempty"`
	// 黑名单细化需求-新增行业信息/投放目标
	AdgroupId     *int64                           `protobuf:"varint,42,opt,name=adgroup_id,json=adgroupId" json:"adgroup_id,omitempty"`
	BusinessId    *int32                           `protobuf:"varint,43,opt,name=business_id,json=businessId" json:"business_id,omitempty"`
	PromotionType *int32                           `protobuf:"varint,44,opt,name=promotion_type,json=promotionType" json:"promotion_type,omitempty"`
	CreativeAttr  []*Response_Seat_Ad_CreativeAttr `protobuf:"bytes,45,rep,name=creative_attr,json=creativeAttr" json:"creative_attr,omitempty"`
	CardStyle     *string                          `protobuf:"bytes,46,opt,name=card_style,json=cardStyle" json:"card_style,omitempty"`
	CardScore     *float64                         `protobuf:"fixed64,47,opt,name=card_score,json=cardScore" json:"card_score,omitempty"`
	Tags          []string                         `protobuf:"bytes,48,rep,name=tags" json:"tags,omitempty"`
	ArrAttr       []*Response_Seat_Ad_ArrayAttr    `protobuf:"bytes,49,rep,name=arrAttr" json:"arrAttr,omitempty"`
	// optional LogParam log_param = 50;
	UniversalUrl *string  `protobuf:"bytes,51,opt,name=universal_url,json=universalUrl" json:"universal_url,omitempty"`
	ThemInfo     []string `protobuf:"bytes,100,rep,name=them_info,json=themInfo" json:"them_info,omitempty"`
}

// Default values for Response_Seat_Ad fields.
const (
	Default_Response_Seat_Ad_IsTopview = int32(0)
)

func (x *Response_Seat_Ad) Reset() {
	*x = Response_Seat_Ad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Seat_Ad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Seat_Ad) ProtoMessage() {}

func (x *Response_Seat_Ad) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Seat_Ad.ProtoReflect.Descriptor instead.
func (*Response_Seat_Ad) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *Response_Seat_Ad) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *Response_Seat_Ad) GetCreativeIds() string {
	if x != nil && x.CreativeIds != nil {
		return *x.CreativeIds
	}
	return ""
}

func (x *Response_Seat_Ad) GetCreativeType() int32 {
	if x != nil && x.CreativeType != nil {
		return *x.CreativeType
	}
	return 0
}

func (x *Response_Seat_Ad) GetAttr() []*Response_Seat_Ad_Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *Response_Seat_Ad) GetTypecode() []int32 {
	if x != nil {
		return x.Typecode
	}
	return nil
}

func (x *Response_Seat_Ad) GetImpressionTrackingUrl() []string {
	if x != nil {
		return x.ImpressionTrackingUrl
	}
	return nil
}

func (x *Response_Seat_Ad) GetClickTrackingUrl() []string {
	if x != nil {
		return x.ClickTrackingUrl
	}
	return nil
}

func (x *Response_Seat_Ad) GetClickThroughUrl() string {
	if x != nil && x.ClickThroughUrl != nil {
		return *x.ClickThroughUrl
	}
	return ""
}

func (x *Response_Seat_Ad) GetDeeplinkUrl() string {
	if x != nil && x.DeeplinkUrl != nil {
		return *x.DeeplinkUrl
	}
	return ""
}

func (x *Response_Seat_Ad) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *Response_Seat_Ad) GetOpenType() int32 {
	if x != nil && x.OpenType != nil {
		return *x.OpenType
	}
	return 0
}

func (x *Response_Seat_Ad) GetCampaignDate() []string {
	if x != nil {
		return x.CampaignDate
	}
	return nil
}

func (x *Response_Seat_Ad) GetAdSource() string {
	if x != nil && x.AdSource != nil {
		return *x.AdSource
	}
	return ""
}

func (x *Response_Seat_Ad) GetBidPrice() int32 {
	if x != nil && x.BidPrice != nil {
		return *x.BidPrice
	}
	return 0
}

func (x *Response_Seat_Ad) GetSettlePrice() int32 {
	if x != nil && x.SettlePrice != nil {
		return *x.SettlePrice
	}
	return 0
}

func (x *Response_Seat_Ad) GetWinnoticeUrl() string {
	if x != nil && x.WinnoticeUrl != nil {
		return *x.WinnoticeUrl
	}
	return ""
}

func (x *Response_Seat_Ad) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Response_Seat_Ad) GetDisplayads() int32 {
	if x != nil && x.Displayads != nil {
		return *x.Displayads
	}
	return 0
}

func (x *Response_Seat_Ad) GetUrlType() string {
	if x != nil && x.UrlType != nil {
		return *x.UrlType
	}
	return ""
}

func (x *Response_Seat_Ad) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *Response_Seat_Ad) GetIsTopview() int32 {
	if x != nil && x.IsTopview != nil {
		return *x.IsTopview
	}
	return Default_Response_Seat_Ad_IsTopview
}

func (x *Response_Seat_Ad) GetThirdImpression() []string {
	if x != nil {
		return x.ThirdImpression
	}
	return nil
}

func (x *Response_Seat_Ad) GetThirdClick() []string {
	if x != nil {
		return x.ThirdClick
	}
	return nil
}

func (x *Response_Seat_Ad) GetClickThroughUrlOriginal() string {
	if x != nil && x.ClickThroughUrlOriginal != nil {
		return *x.ClickThroughUrlOriginal
	}
	return ""
}

func (x *Response_Seat_Ad) GetDealId() string {
	if x != nil && x.DealId != nil {
		return *x.DealId
	}
	return ""
}

func (x *Response_Seat_Ad) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Response_Seat_Ad) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Response_Seat_Ad) GetMetaPriority() int32 {
	if x != nil && x.MetaPriority != nil {
		return *x.MetaPriority
	}
	return 0
}

func (x *Response_Seat_Ad) GetRtaType() string {
	if x != nil && x.RtaType != nil {
		return *x.RtaType
	}
	return ""
}

func (x *Response_Seat_Ad) GetRtaContent() []string {
	if x != nil {
		return x.RtaContent
	}
	return nil
}

func (x *Response_Seat_Ad) GetAdgroupId() int64 {
	if x != nil && x.AdgroupId != nil {
		return *x.AdgroupId
	}
	return 0
}

func (x *Response_Seat_Ad) GetBusinessId() int32 {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return 0
}

func (x *Response_Seat_Ad) GetPromotionType() int32 {
	if x != nil && x.PromotionType != nil {
		return *x.PromotionType
	}
	return 0
}

func (x *Response_Seat_Ad) GetCreativeAttr() []*Response_Seat_Ad_CreativeAttr {
	if x != nil {
		return x.CreativeAttr
	}
	return nil
}

func (x *Response_Seat_Ad) GetCardStyle() string {
	if x != nil && x.CardStyle != nil {
		return *x.CardStyle
	}
	return ""
}

func (x *Response_Seat_Ad) GetCardScore() float64 {
	if x != nil && x.CardScore != nil {
		return *x.CardScore
	}
	return 0
}

func (x *Response_Seat_Ad) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Response_Seat_Ad) GetArrAttr() []*Response_Seat_Ad_ArrayAttr {
	if x != nil {
		return x.ArrAttr
	}
	return nil
}

func (x *Response_Seat_Ad) GetUniversalUrl() string {
	if x != nil && x.UniversalUrl != nil {
		return *x.UniversalUrl
	}
	return ""
}

func (x *Response_Seat_Ad) GetThemInfo() []string {
	if x != nil {
		return x.ThemInfo
	}
	return nil
}

type Response_Seat_Ad_Attr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 属性名
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// 属性值
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"` // 值类型
}

func (x *Response_Seat_Ad_Attr) Reset() {
	*x = Response_Seat_Ad_Attr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Seat_Ad_Attr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Seat_Ad_Attr) ProtoMessage() {}

func (x *Response_Seat_Ad_Attr) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Seat_Ad_Attr.ProtoReflect.Descriptor instead.
func (*Response_Seat_Ad_Attr) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *Response_Seat_Ad_Attr) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Response_Seat_Ad_Attr) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Response_Seat_Ad_CreativeAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr []*Response_Seat_Ad_Attr `protobuf:"bytes,1,rep,name=attr" json:"attr,omitempty"`
}

func (x *Response_Seat_Ad_CreativeAttr) Reset() {
	*x = Response_Seat_Ad_CreativeAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Seat_Ad_CreativeAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Seat_Ad_CreativeAttr) ProtoMessage() {}

func (x *Response_Seat_Ad_CreativeAttr) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Seat_Ad_CreativeAttr.ProtoReflect.Descriptor instead.
func (*Response_Seat_Ad_CreativeAttr) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (x *Response_Seat_Ad_CreativeAttr) GetAttr() []*Response_Seat_Ad_Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type Response_Seat_Ad_ArrayAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 属性名
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// 属性值
	Value []string `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
}

func (x *Response_Seat_Ad_ArrayAttr) Reset() {
	*x = Response_Seat_Ad_ArrayAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaode_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Seat_Ad_ArrayAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Seat_Ad_ArrayAttr) ProtoMessage() {}

func (x *Response_Seat_Ad_ArrayAttr) ProtoReflect() protoreflect.Message {
	mi := &file_gaode_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Seat_Ad_ArrayAttr.ProtoReflect.Descriptor instead.
func (*Response_Seat_Ad_ArrayAttr) Descriptor() ([]byte, []int) {
	return file_gaode_proto_rawDescGZIP(), []int{1, 0, 0, 2}
}

func (x *Response_Seat_Ad_ArrayAttr) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Response_Seat_Ad_ArrayAttr) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_gaode_proto protoreflect.FileDescriptor

var file_gaode_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x61, 0x6f, 0x64, 0x65, 0x22, 0x86, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x69, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x69, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6f, 0x64,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x43, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75,
	0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6a, 0x78, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6a, 0x78,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x73, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x73, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x73, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x49, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x70, 0x6f, 0x69, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x6f, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x74,
	0x61, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x74, 0x61, 0x67, 0x12, 0x24,
	0x0a, 0x0e, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x1c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x1e, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6c, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x75, 0x73, 0x65, 0x4c, 0x6c, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x41, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x93,
	0x03, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x64, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x76, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x76, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x61, 0x6c, 0x49, 0x64, 0x1a, 0xd4, 0x07, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6d, 0x65, 0x69, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6d, 0x65, 0x69, 0x4d, 0x64, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x63, 0x4d, 0x64, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x73, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6f, 0x73, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0b,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x04, 0x31, 0x30, 0x30, 0x30, 0x52, 0x0a, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x03,
	0x34, 0x38, 0x30, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x69,
	0x5f, 0x61, 0x61, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x69,
	0x41, 0x61, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x75, 0x64, 0x69, 0x64, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x75, 0x64, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x6d, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x61, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61,
	0x69, 0x64, 0x1a, 0xa6, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65,
	0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x65,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6f, 0x2e, 0x50, 0x6f,
	0x69, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x1a, 0x53, 0x0a, 0x03, 0x50, 0x6f, 0x69, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x6f, 0x69, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xe6, 0x01, 0x0a, 0x03,
	0x41, 0x70, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x69, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x62, 0x76, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x62, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4c, 0x6f, 0x61, 0x64, 0x1a, 0xd4, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x74, 0x64, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x74, 0x64, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x69, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x69, 0x75, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x66, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x66, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x54, 0x61, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x75, 0x33, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x69, 0x75, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x69, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x75, 0x32, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x75, 0x32, 0x1a, 0x2f, 0x0a, 0x07, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x30, 0x0a, 0x04, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd3, 0x0e,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x31,
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x45, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x1a, 0xfb, 0x0c, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x27, 0x0a, 0x02, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65,
	0x61, 0x74, 0x2e, 0x41, 0x64, 0x52, 0x02, 0x61, 0x64, 0x1a, 0xb7, 0x0c, 0x0a, 0x02, 0x41, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61,
	0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x74, 0x2e, 0x41, 0x64, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x69,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x61, 0x64, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x61, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x72, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x69, 0x73, 0x54, 0x6f, 0x70,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x19,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x54, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x55, 0x72, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x65, 0x74,
	0x61, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x74, 0x61,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x74, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x2d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x30, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x72, 0x72,
	0x41, 0x74, 0x74, 0x72, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6f,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74,
	0x2e, 0x41, 0x64, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x74, 0x74, 0x72, 0x52, 0x07, 0x61,
	0x72, 0x72, 0x41, 0x74, 0x74, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x68, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x68, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x30, 0x0a, 0x04, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x40, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x61, 0x74,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6f, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x2e, 0x41,
	0x64, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x1a, 0x35, 0x0a, 0x09,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x41, 0x74, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x67, 0x61, 0x6f, 0x64, 0x65,
}

var (
	file_gaode_proto_rawDescOnce sync.Once
	file_gaode_proto_rawDescData = file_gaode_proto_rawDesc
)

func file_gaode_proto_rawDescGZIP() []byte {
	file_gaode_proto_rawDescOnce.Do(func() {
		file_gaode_proto_rawDescData = protoimpl.X.CompressGZIP(file_gaode_proto_rawDescData)
	})
	return file_gaode_proto_rawDescData
}

var file_gaode_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gaode_proto_goTypes = []interface{}{
	(*Request)(nil),                       // 0: gaode.Request
	(*Response)(nil),                      // 1: gaode.Response
	(*Request_Impression)(nil),            // 2: gaode.Request.Impression
	(*Request_Device)(nil),                // 3: gaode.Request.Device
	(*Request_App)(nil),                   // 4: gaode.Request.App
	(*Request_User)(nil),                  // 5: gaode.Request.User
	(*Request_Attr)(nil),                  // 6: gaode.Request.Attr
	(*Request_Device_Geo)(nil),            // 7: gaode.Request.Device.Geo
	(*Request_Device_Geo_Poi)(nil),        // 8: gaode.Request.Device.Geo.Poi
	(*Request_User_UserTag)(nil),          // 9: gaode.Request.User.UserTag
	(*Response_Seat)(nil),                 // 10: gaode.Response.Seat
	(*Response_Seat_Ad)(nil),              // 11: gaode.Response.Seat.Ad
	(*Response_Seat_Ad_Attr)(nil),         // 12: gaode.Response.Seat.Ad.Attr
	(*Response_Seat_Ad_CreativeAttr)(nil), // 13: gaode.Response.Seat.Ad.CreativeAttr
	(*Response_Seat_Ad_ArrayAttr)(nil),    // 14: gaode.Response.Seat.Ad.ArrayAttr
}
var file_gaode_proto_depIdxs = []int32{
	2,  // 0: gaode.Request.imp:type_name -> gaode.Request.Impression
	3,  // 1: gaode.Request.device:type_name -> gaode.Request.Device
	4,  // 2: gaode.Request.app:type_name -> gaode.Request.App
	5,  // 3: gaode.Request.user:type_name -> gaode.Request.User
	6,  // 4: gaode.Request.attr:type_name -> gaode.Request.Attr
	10, // 5: gaode.Response.seat:type_name -> gaode.Response.Seat
	7,  // 6: gaode.Request.Device.geo:type_name -> gaode.Request.Device.Geo
	9,  // 7: gaode.Request.User.user_tags:type_name -> gaode.Request.User.UserTag
	8,  // 8: gaode.Request.Device.Geo.poi:type_name -> gaode.Request.Device.Geo.Poi
	11, // 9: gaode.Response.Seat.ad:type_name -> gaode.Response.Seat.Ad
	12, // 10: gaode.Response.Seat.Ad.attr:type_name -> gaode.Response.Seat.Ad.Attr
	13, // 11: gaode.Response.Seat.Ad.creative_attr:type_name -> gaode.Response.Seat.Ad.CreativeAttr
	14, // 12: gaode.Response.Seat.Ad.arrAttr:type_name -> gaode.Response.Seat.Ad.ArrayAttr
	12, // 13: gaode.Response.Seat.Ad.CreativeAttr.attr:type_name -> gaode.Response.Seat.Ad.Attr
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_gaode_proto_init() }
func file_gaode_proto_init() {
	if File_gaode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gaode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Impression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Device_Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_Device_Geo_Poi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_User_UserTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Seat_Ad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Seat_Ad_Attr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Seat_Ad_CreativeAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaode_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response_Seat_Ad_ArrayAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gaode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gaode_proto_goTypes,
		DependencyIndexes: file_gaode_proto_depIdxs,
		MessageInfos:      file_gaode_proto_msgTypes,
	}.Build()
	File_gaode_proto = out.File
	file_gaode_proto_rawDesc = nil
	file_gaode_proto_goTypes = nil
	file_gaode_proto_depIdxs = nil
}
