// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: ubix_ssp.proto

package ubix

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 尺寸
type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`   // 宽度。
	Height uint32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"` // 高度。
	Ratio  string `protobuf:"bytes,3,opt,name=ratio,proto3" json:"ratio,omitempty"`    // 比例: 2:3, 9:16
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{0}
}

func (x *Size) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Size) GetRatio() string {
	if x != nil {
		return x.Ratio
	}
	return ""
}

// 广告请求
type BidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      string    `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                   // 必填。请求的唯一标志
	ApiVersion     string    `protobuf:"bytes,2,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`                // 必填。此API的版本。格式如：1.0.7
	User           *User     `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                              // 媒体侧提供的用户信息，用于eCPM优化。
	App            *App      `protobuf:"bytes,4,opt,name=app,proto3" json:"app,omitempty"`                                                // 必填。移动app的信息。
	Device         *Device   `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`                                          // 必填。移动设备的信息。
	AdSlots        []*AdSlot `protobuf:"bytes,6,rep,name=ad_slots,json=adSlots,proto3" json:"ad_slots,omitempty"`                         // 必填，至少一个。广告位的信息。目前只支持一个
	Ua             string    `protobuf:"bytes,7,opt,name=ua,proto3" json:"ua,omitempty"`                                                  // 必填。User-Agent
	Ipv4           string    `protobuf:"bytes,8,opt,name=ipv4,proto3" json:"ipv4,omitempty"`                                              // 必填。设备的ipv4，用于定位，地域定向
	IsSupportMacro int32     `protobuf:"varint,9,opt,name=is_support_macro,json=isSupportMacro,proto3" json:"is_support_macro,omitempty"` // 是否支持宏替换，默认为0。0：不支持 1：支持。
	Ipv6           string    `protobuf:"bytes,10,opt,name=ipv6,proto3" json:"ipv6,omitempty"`                                             // 非必填。设备的ipv6，用于定位，地域定向
}

func (x *BidRequest) Reset() {
	*x = BidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidRequest) ProtoMessage() {}

func (x *BidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidRequest.ProtoReflect.Descriptor instead.
func (*BidRequest) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{1}
}

func (x *BidRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BidRequest) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *BidRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BidRequest) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *BidRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *BidRequest) GetAdSlots() []*AdSlot {
	if x != nil {
		return x.AdSlots
	}
	return nil
}

func (x *BidRequest) GetUa() string {
	if x != nil {
		return x.Ua
	}
	return ""
}

func (x *BidRequest) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *BidRequest) GetIsSupportMacro() int32 {
	if x != nil {
		return x.IsSupportMacro
	}
	return 0
}

func (x *BidRequest) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

// 媒体侧提供的用户信息，用于eCPM优化。
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                          // 选填，用户在媒体上注册的ID；如没有，则传空
	Gender        uint32   `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`                                   // 可选。用户的性别。0: Unknown, 1: Male, 2: Female
	Age           uint32   `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`                                         // 可选。用户的年龄段。[0-18):0；[18-24):18；[24-31):24；[31-41):31；[41-51):41；50以上传50
	Keywords      []string `protobuf:"bytes,4,rep,name=keywords,proto3" json:"keywords,omitempty"`                                // 关键字
	Segments      []string `protobuf:"bytes,5,rep,name=segments,proto3" json:"segments,omitempty"`                                // 策略id列表（人群包）
	Ext           string   `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`                                          // 扩展字段
	Tags          []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                        // 标签id列表
	Category      []string `protobuf:"bytes,8,rep,name=category,proto3" json:"category,omitempty"`                                // 用户分类
	InstalledApps []string `protobuf:"bytes,9,rep,name=installed_apps,json=installedApps,proto3" json:"installed_apps,omitempty"` // 安装的应用列表
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *User) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *User) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *User) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *User) GetSegments() []string {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *User) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *User) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *User) GetInstalledApps() []string {
	if x != nil {
		return x.InstalledApps
	}
	return nil
}

// App相关信息
type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                   // 必填。应用ID。
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 可选。APP名称。
	PackageName string   `protobuf:"bytes,3,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"` // 必填。IOS填写bundleID，Android填写包名
	Version     string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                            // 可选。 app的版本信息。格式如：3.2.1
	Geo         *App_Geo `protobuf:"bytes,5,opt,name=geo,proto3" json:"geo,omitempty"`                                    // 发起广告请求时，设备的地理职位信息
	IsPaidApp   bool     `protobuf:"varint,6,opt,name=is_paid_app,json=isPaidApp,proto3" json:"is_paid_app,omitempty"`    // 是否为付费app
	PublisherId string   `protobuf:"bytes,7,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"` // 渠道id
	Category    []string `protobuf:"bytes,8,rep,name=category,proto3" json:"category,omitempty"`                          // 应用分类
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{3}
}

func (x *App) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *App) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *App) GetGeo() *App_Geo {
	if x != nil {
		return x.Geo
	}
	return nil
}

func (x *App) GetIsPaidApp() bool {
	if x != nil {
		return x.IsPaidApp
	}
	return false
}

func (x *App) GetPublisherId() string {
	if x != nil {
		return x.PublisherId
	}
	return ""
}

func (x *App) GetCategory() []string {
	if x != nil {
		return x.Category
	}
	return nil
}

// 设备信息
type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did                *Device_DeviceId `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`                                                                // 设备ID信息。必填
	DeviceType         int32            `protobuf:"varint,2,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`                               // 必填。设备类型。0: Unknown, 1: Phone, 2: Tablet
	OsType             int32            `protobuf:"varint,3,opt,name=os_type,json=osType,proto3" json:"os_type,omitempty"`                                           // 必填。操作系统类型。0: Unknown, 1: Android, 2: IOS, 3: Windows
	OsVersion          string           `protobuf:"bytes,4,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`                                   // 可选。操作系统版本。格式如：3.2.1
	Vendor             string           `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor,omitempty"`                                                          // 必填。设备厂商，如Apple, Samsung
	Model              string           `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`                                                            // Android必填。设备机型名称，如：iPhone 11 Pro, Galaxy
	HwModel            string           `protobuf:"bytes,7,opt,name=hw_model,json=hwModel,proto3" json:"hw_model,omitempty"`                                         // IOS必填。IOS系统型号。
	HwMachine          string           `protobuf:"bytes,8,opt,name=hw_machine,json=hwMachine,proto3" json:"hw_machine,omitempty"`                                   // IOS必填 cpu型号
	Language           string           `protobuf:"bytes,9,opt,name=language,proto3" json:"language,omitempty"`                                                      // 可选。设备设置的语言
	ConnType           int32            `protobuf:"varint,10,opt,name=conn_type,json=connType,proto3" json:"conn_type,omitempty"`                                    // 可选。设备的网络类型。0: Unknown, 1: Wifi, 2: 2G, 3: 3G, 4: 4G 5：5G
	ScreenSize         *Size            `protobuf:"bytes,11,opt,name=screen_size,json=screenSize,proto3" json:"screen_size,omitempty"`                               // 设备宽x高，单位：像素
	Dpi                float32          `protobuf:"fixed32,12,opt,name=dpi,proto3" json:"dpi,omitempty"`                                                             // 屏幕密度
	DeviceName         string           `protobuf:"bytes,13,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`                               // 建议。手机名称
	Orientation        int32            `protobuf:"varint,14,opt,name=orientation,proto3" json:"orientation,omitempty"`                                              // 建议。设备屏幕方向。0: Unknown, 1: 竖屏, 2: 横屏
	CarrierType        string           `protobuf:"bytes,15,opt,name=carrier_type,json=carrierType,proto3" json:"carrier_type,omitempty"`                            // 开发者不填写。移动运营商分类。0: Unknown, 1: Mobile, 2: Unicom, 3: Telecom
	CarrierCode        int32            `protobuf:"varint,16,opt,name=carrier_code,json=carrierCode,proto3" json:"carrier_code,omitempty"`                           // 由国际电联统一分配的移动运营商代码。MCC(3位) + MNC(2位)
	StartupTime        string           `protobuf:"bytes,18,opt,name=startup_time,json=startupTime,proto3" json:"startup_time,omitempty"`                            // 手机开机时间，如"1596270702.486691"，ios必传，Android推荐
	MbTime             string           `protobuf:"bytes,19,opt,name=mb_time,json=mbTime,proto3" json:"mb_time,omitempty"`                                           // 系统版本更新时间，如"1596632447.155983"，ios必传，Android推荐
	CpuNum             int32            `protobuf:"varint,20,opt,name=cpu_num,json=cpuNum,proto3" json:"cpu_num,omitempty"`                                          // cpu数目，如"4"，ios必传，Android推荐
	DiskCapacity       int64            `protobuf:"varint,21,opt,name=disk_capacity,json=diskCapacity,proto3" json:"disk_capacity,omitempty"`                        // 磁盘容量大小（单位B）, ios必传，Android推荐
	MemCapacity        int64            `protobuf:"varint,22,opt,name=mem_capacity,json=memCapacity,proto3" json:"mem_capacity,omitempty"`                           // 内存容量大小（单位B）, ios必传，Android推荐
	AuthStatus         int32            `protobuf:"varint,23,opt,name=auth_status,json=authStatus,proto3" json:"auth_status,omitempty"`                              // 广告标志授权情况，如"3"（代表authorized），ios必传
	BatteryPower       int32            `protobuf:"varint,24,opt,name=battery_power,json=batteryPower,proto3" json:"battery_power,omitempty"`                        // 设备电量百分比，取整数，数值区间 0~100。
	VivoStoreVer       string           `protobuf:"bytes,25,opt,name=vivo_store_ver,json=vivoStoreVer,proto3" json:"vivo_store_ver,omitempty"`                       // vivo 应用商店版本号，如果是 vivo 则必填
	HuaweiVerCodeOfHms string           `protobuf:"bytes,26,opt,name=huawei_ver_code_of_hms,json=huaweiVerCodeOfHms,proto3" json:"huawei_ver_code_of_hms,omitempty"` // HMS Core 版本号，实现被推广应用的静默安装依赖 HMS Core 能力。 华为设备且投放华为平台必填。
	HuaweiVerCodeOfAg  string           `protobuf:"bytes,27,opt,name=huawei_ver_code_of_ag,json=huaweiVerCodeOfAg,proto3" json:"huawei_ver_code_of_ag,omitempty"`    // 应用市场版本号。与下载类广告的转化路径有关。 华为设备且投放华为平台必填。
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{4}
}

func (x *Device) GetDid() *Device_DeviceId {
	if x != nil {
		return x.Did
	}
	return nil
}

func (x *Device) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

func (x *Device) GetOsType() int32 {
	if x != nil {
		return x.OsType
	}
	return 0
}

func (x *Device) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Device) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetHwModel() string {
	if x != nil {
		return x.HwModel
	}
	return ""
}

func (x *Device) GetHwMachine() string {
	if x != nil {
		return x.HwMachine
	}
	return ""
}

func (x *Device) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Device) GetConnType() int32 {
	if x != nil {
		return x.ConnType
	}
	return 0
}

func (x *Device) GetScreenSize() *Size {
	if x != nil {
		return x.ScreenSize
	}
	return nil
}

func (x *Device) GetDpi() float32 {
	if x != nil {
		return x.Dpi
	}
	return 0
}

func (x *Device) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Device) GetOrientation() int32 {
	if x != nil {
		return x.Orientation
	}
	return 0
}

func (x *Device) GetCarrierType() string {
	if x != nil {
		return x.CarrierType
	}
	return ""
}

func (x *Device) GetCarrierCode() int32 {
	if x != nil {
		return x.CarrierCode
	}
	return 0
}

func (x *Device) GetStartupTime() string {
	if x != nil {
		return x.StartupTime
	}
	return ""
}

func (x *Device) GetMbTime() string {
	if x != nil {
		return x.MbTime
	}
	return ""
}

func (x *Device) GetCpuNum() int32 {
	if x != nil {
		return x.CpuNum
	}
	return 0
}

func (x *Device) GetDiskCapacity() int64 {
	if x != nil {
		return x.DiskCapacity
	}
	return 0
}

func (x *Device) GetMemCapacity() int64 {
	if x != nil {
		return x.MemCapacity
	}
	return 0
}

func (x *Device) GetAuthStatus() int32 {
	if x != nil {
		return x.AuthStatus
	}
	return 0
}

func (x *Device) GetBatteryPower() int32 {
	if x != nil {
		return x.BatteryPower
	}
	return 0
}

func (x *Device) GetVivoStoreVer() string {
	if x != nil {
		return x.VivoStoreVer
	}
	return ""
}

func (x *Device) GetHuaweiVerCodeOfHms() string {
	if x != nil {
		return x.HuaweiVerCodeOfHms
	}
	return ""
}

func (x *Device) GetHuaweiVerCodeOfAg() string {
	if x != nil {
		return x.HuaweiVerCodeOfAg
	}
	return ""
}

// 交易模式信息
type TradingMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                         // 交易模式。0: cpm分成 1：PD 2:RTB 3:PDB
	DealId   string `protobuf:"bytes,2,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`        // 双方线下确定好的deal_id。当type=1、3时必填
	FloorCpm uint64 `protobuf:"varint,3,opt,name=floor_cpm,json=floorCpm,proto3" json:"floor_cpm,omitempty"` // 单位为cpm分
}

func (x *TradingMode) Reset() {
	*x = TradingMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradingMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingMode) ProtoMessage() {}

func (x *TradingMode) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingMode.ProtoReflect.Descriptor instead.
func (*TradingMode) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{5}
}

func (x *TradingMode) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradingMode) GetDealId() string {
	if x != nil {
		return x.DealId
	}
	return ""
}

func (x *TradingMode) GetFloorCpm() uint64 {
	if x != nil {
		return x.FloorCpm
	}
	return 0
}

// 广告位信息
type AdSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                       // 必填。广告位id
	AdType                   int32                   `protobuf:"varint,2,opt,name=ad_type,json=adType,proto3" json:"ad_type,omitempty"`                                                                // 必填。广告类型。1开屏；2信息流；3图标 4Banner（横幅）5贴片 6插屏 7开机（目前仅支持OTT端）8搜索 9激励视频
	IsSupportDpl             int32                   `protobuf:"varint,3,opt,name=is_support_dpl,json=isSupportDpl,proto3" json:"is_support_dpl,omitempty"`                                            // 是否支持deeplink，0：不支持，1：支持。默认是0
	AcceptedCreativeSpecs    []*AdSlot_CreativeSpecs `protobuf:"bytes,4,rep,name=accepted_creative_specs,json=acceptedCreativeSpecs,proto3" json:"accepted_creative_specs,omitempty"`                  // 必填。可接受的创意规格信息
	AcceptedInteractionTypes []int32                 `protobuf:"varint,5,rep,packed,name=accepted_interaction_types,json=acceptedInteractionTypes,proto3" json:"accepted_interaction_types,omitempty"` // app支持的创意交互类型。3：应用内打开 4：download。默认全部都支持
	TradingMode              *TradingMode            `protobuf:"bytes,6,opt,name=trading_mode,json=tradingMode,proto3" json:"trading_mode,omitempty"`                                                  // 必填。交易信息
	SceneContext             *SceneContext           `protobuf:"bytes,7,opt,name=scene_context,json=sceneContext,proto3" json:"scene_context,omitempty"`                                               // optional, 场景上下文
	IsSupportMp              int32                   `protobuf:"varint,8,opt,name=is_support_mp,json=isSupportMp,proto3" json:"is_support_mp,omitempty"`                                               // 是否支持原生调起小程序 0：未知，1：支持。 2:不支持 默认是0
	PatchLocation            int32                   `protobuf:"varint,9,opt,name=patch_location,json=patchLocation,proto3" json:"patch_location,omitempty"`                                           // 贴片位置,0默认;1前贴;2中贴;3后贴
	Secure                   bool                    `protobuf:"varint,10,opt,name=secure,proto3" json:"secure,omitempty"`                                                                             // 是否支持安全链接
	IsSupportCtrAgent        int32                   `protobuf:"varint,11,opt,name=is_support_ctr_agent,json=isSupportCtrAgent,proto3" json:"is_support_ctr_agent,omitempty"`                          // 是否支持ctr代理 默认0=不支持， 1=支持
}

func (x *AdSlot) Reset() {
	*x = AdSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSlot) ProtoMessage() {}

func (x *AdSlot) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSlot.ProtoReflect.Descriptor instead.
func (*AdSlot) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{6}
}

func (x *AdSlot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdSlot) GetAdType() int32 {
	if x != nil {
		return x.AdType
	}
	return 0
}

func (x *AdSlot) GetIsSupportDpl() int32 {
	if x != nil {
		return x.IsSupportDpl
	}
	return 0
}

func (x *AdSlot) GetAcceptedCreativeSpecs() []*AdSlot_CreativeSpecs {
	if x != nil {
		return x.AcceptedCreativeSpecs
	}
	return nil
}

func (x *AdSlot) GetAcceptedInteractionTypes() []int32 {
	if x != nil {
		return x.AcceptedInteractionTypes
	}
	return nil
}

func (x *AdSlot) GetTradingMode() *TradingMode {
	if x != nil {
		return x.TradingMode
	}
	return nil
}

func (x *AdSlot) GetSceneContext() *SceneContext {
	if x != nil {
		return x.SceneContext
	}
	return nil
}

func (x *AdSlot) GetIsSupportMp() int32 {
	if x != nil {
		return x.IsSupportMp
	}
	return 0
}

func (x *AdSlot) GetPatchLocation() int32 {
	if x != nil {
		return x.PatchLocation
	}
	return 0
}

func (x *AdSlot) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

func (x *AdSlot) GetIsSupportCtrAgent() int32 {
	if x != nil {
		return x.IsSupportCtrAgent
	}
	return 0
}

type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdTemplateId string `protobuf:"bytes,3,opt,name=ad_template_id,json=adTemplateId,proto3" json:"ad_template_id,omitempty"` // 广告模版信息
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{7}
}

func (x *Template) GetAdTemplateId() string {
	if x != nil {
		return x.AdTemplateId
	}
	return ""
}

// 场景上下文，不同的场景对应的上下文信息
type SceneContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoContext  *SceneContext_VideoContext  `protobuf:"bytes,1,opt,name=video_context,json=videoContext,proto3" json:"video_context,omitempty"`    // 视频场景上下文，通常发生在用户通过媒体观看视频时，如果有可以提供
	SearchContext *SceneContext_SearchContext `protobuf:"bytes,2,opt,name=search_context,json=searchContext,proto3" json:"search_context,omitempty"` // 搜索场景上下文
}

func (x *SceneContext) Reset() {
	*x = SceneContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneContext) ProtoMessage() {}

func (x *SceneContext) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneContext.ProtoReflect.Descriptor instead.
func (*SceneContext) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{8}
}

func (x *SceneContext) GetVideoContext() *SceneContext_VideoContext {
	if x != nil {
		return x.VideoContext
	}
	return nil
}

func (x *SceneContext) GetSearchContext() *SceneContext_SearchContext {
	if x != nil {
		return x.SearchContext
	}
	return nil
}

type BidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId           string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`                                // 必填。BidRequest中所带的request_id。
	Ads                 []*Ad  `protobuf:"bytes,2,rep,name=ads,proto3" json:"ads,omitempty"`                                                             // 当广告返回时必填，与adslots对应。当前只支持返回一个广告
	StatusCode          int64  `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`                            // 广告处理结果的状态码。
	ExpirationTimestamp int64  `protobuf:"varint,5,opt,name=expiration_timestamp,json=expirationTimestamp,proto3" json:"expiration_timestamp,omitempty"` // 广告过期时间戳，单位为秒
}

func (x *BidResponse) Reset() {
	*x = BidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidResponse) ProtoMessage() {}

func (x *BidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidResponse.ProtoReflect.Descriptor instead.
func (*BidResponse) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{9}
}

func (x *BidResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BidResponse) GetAds() []*Ad {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *BidResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BidResponse) GetExpirationTimestamp() int64 {
	if x != nil {
		return x.ExpirationTimestamp
	}
	return 0
}

type Ad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId       string           `protobuf:"bytes,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`                    // 必填。广告组ID
	Creative   *Ad_MaterialMeta `protobuf:"bytes,2,opt,name=creative,proto3" json:"creative,omitempty"`                        // 必填。广告物料
	BidPrice   uint64           `protobuf:"varint,3,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`       // 竞价模式时必填。出价, cpm分
	BidType    int32            `protobuf:"varint,5,opt,name=bid_type,json=bidType,proto3" json:"bid_type,omitempty"`          // 出价类型 默认:1,1=cpm
	SettleType int32            `protobuf:"varint,6,opt,name=settle_type,json=settleType,proto3" json:"settle_type,omitempty"` // 计费类型 默认:1,1=cpm
	Ext        string           `protobuf:"bytes,10,opt,name=ext,proto3" json:"ext,omitempty"`                                 // 扩展字段
}

func (x *Ad) Reset() {
	*x = Ad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad) ProtoMessage() {}

func (x *Ad) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad.ProtoReflect.Descriptor instead.
func (*Ad) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10}
}

func (x *Ad) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *Ad) GetCreative() *Ad_MaterialMeta {
	if x != nil {
		return x.Creative
	}
	return nil
}

func (x *Ad) GetBidPrice() uint64 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

func (x *Ad) GetBidType() int32 {
	if x != nil {
		return x.BidType
	}
	return 0
}

func (x *Ad) GetSettleType() int32 {
	if x != nil {
		return x.SettleType
	}
	return 0
}

func (x *Ad) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

// 地理位置信息
type App_Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude     float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`                           // 推荐。GPS纬度
	Longitude    float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`                         // 推荐。GPS经度
	LocalTzName  string  `protobuf:"bytes,3,opt,name=local_tz_name,json=localTzName,proto3" json:"local_tz_name,omitempty"`  // local时区，如"Asia/Shanghai"
	CityCode     string  `protobuf:"bytes,4,opt,name=city_code,json=cityCode,proto3" json:"city_code,omitempty"`             // 市国标码
	ProvinceCode string  `protobuf:"bytes,5,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"` // 省份国标码
	DistrictCode string  `protobuf:"bytes,6,opt,name=district_code,json=districtCode,proto3" json:"district_code,omitempty"` // 区县国标码
	CountryCode  string  `protobuf:"bytes,7,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`    // 国家代码
}

func (x *App_Geo) Reset() {
	*x = App_Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App_Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App_Geo) ProtoMessage() {}

func (x *App_Geo) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App_Geo.ProtoReflect.Descriptor instead.
func (*App_Geo) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{3, 0}
}

func (x *App_Geo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *App_Geo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *App_Geo) GetLocalTzName() string {
	if x != nil {
		return x.LocalTzName
	}
	return ""
}

func (x *App_Geo) GetCityCode() string {
	if x != nil {
		return x.CityCode
	}
	return ""
}

func (x *App_Geo) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *App_Geo) GetDistrictCode() string {
	if x != nil {
		return x.DistrictCode
	}
	return ""
}

func (x *App_Geo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

type Device_DeviceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // 非必填，预留设备id字段
	Idfa         string                  `protobuf:"bytes,2,opt,name=idfa,proto3" json:"idfa,omitempty"`                                        // IOS必填。IOS为IDFA（明文，大写），带"-"，若取不到则传空值""
	Idfv         string                  `protobuf:"bytes,3,opt,name=idfv,proto3" json:"idfv,omitempty"`                                        // IOS必填，若取不到则传空值""
	Imei         string                  `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei,omitempty"`                                        // 设备IMEI（明文），Android必填，若取不到则传空值""
	ImeiMd5      string                  `protobuf:"bytes,5,opt,name=imei_md5,json=imeiMd5,proto3" json:"imei_md5,omitempty"`                   // IMEI号的MD5加密，若取不到则传空值""
	AndroidId    string                  `protobuf:"bytes,6,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`             // 原文，明文
	Oaid         string                  `protobuf:"bytes,7,opt,name=oaid,proto3" json:"oaid,omitempty"`                                        // 匿名设备标识符，原文，明文
	Mac          string                  `protobuf:"bytes,8,opt,name=mac,proto3" json:"mac,omitempty"`                                          // 设备的mac地址，原文
	WifiMac      string                  `protobuf:"bytes,9,opt,name=wifi_mac,json=wifiMac,proto3" json:"wifi_mac,omitempty"`                   // WIFI路由器MAC地址
	Ssid         string                  `protobuf:"bytes,10,opt,name=ssid,proto3" json:"ssid,omitempty"`                                       // 选填。无线网SSID名称
	Imsi         string                  `protobuf:"bytes,11,opt,name=imsi,proto3" json:"imsi,omitempty"`                                       // 选填。IMSI（SIM卡串号）（一般Android可以取到）
	Idfamd5      string                  `protobuf:"bytes,12,opt,name=idfamd5,proto3" json:"idfamd5,omitempty"`                                 // 选填 idfa md5加密大写
	AndroidIdMd5 string                  `protobuf:"bytes,14,opt,name=android_id_md5,json=androidIdMd5,proto3" json:"android_id_md5,omitempty"` //android id md5
	MacMd5       string                  `protobuf:"bytes,15,opt,name=mac_md5,json=macMd5,proto3" json:"mac_md5,omitempty"`                     // 原始 mac 去冒号转大写之后 MD5 值
	OaidMd5      string                  `protobuf:"bytes,16,opt,name=oaid_md5,json=oaidMd5,proto3" json:"oaid_md5,omitempty"`                  // oaid md5
	WifiMacMd5   string                  `protobuf:"bytes,17,opt,name=wifi_mac_md5,json=wifiMacMd5,proto3" json:"wifi_mac_md5,omitempty"`       // WIFI MAC MD5
	Caids        []*Device_DeviceId_CAID `protobuf:"bytes,18,rep,name=caids,proto3" json:"caids,omitempty"`                                     //中广协CAID
	Paid         string                  `protobuf:"bytes,19,opt,name=paid,proto3" json:"paid,omitempty"`                                       //PDD归因参数
}

func (x *Device_DeviceId) Reset() {
	*x = Device_DeviceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device_DeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device_DeviceId) ProtoMessage() {}

func (x *Device_DeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device_DeviceId.ProtoReflect.Descriptor instead.
func (*Device_DeviceId) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Device_DeviceId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device_DeviceId) GetIdfa() string {
	if x != nil {
		return x.Idfa
	}
	return ""
}

func (x *Device_DeviceId) GetIdfv() string {
	if x != nil {
		return x.Idfv
	}
	return ""
}

func (x *Device_DeviceId) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *Device_DeviceId) GetImeiMd5() string {
	if x != nil {
		return x.ImeiMd5
	}
	return ""
}

func (x *Device_DeviceId) GetAndroidId() string {
	if x != nil {
		return x.AndroidId
	}
	return ""
}

func (x *Device_DeviceId) GetOaid() string {
	if x != nil {
		return x.Oaid
	}
	return ""
}

func (x *Device_DeviceId) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Device_DeviceId) GetWifiMac() string {
	if x != nil {
		return x.WifiMac
	}
	return ""
}

func (x *Device_DeviceId) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *Device_DeviceId) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *Device_DeviceId) GetIdfamd5() string {
	if x != nil {
		return x.Idfamd5
	}
	return ""
}

func (x *Device_DeviceId) GetAndroidIdMd5() string {
	if x != nil {
		return x.AndroidIdMd5
	}
	return ""
}

func (x *Device_DeviceId) GetMacMd5() string {
	if x != nil {
		return x.MacMd5
	}
	return ""
}

func (x *Device_DeviceId) GetOaidMd5() string {
	if x != nil {
		return x.OaidMd5
	}
	return ""
}

func (x *Device_DeviceId) GetWifiMacMd5() string {
	if x != nil {
		return x.WifiMacMd5
	}
	return ""
}

func (x *Device_DeviceId) GetCaids() []*Device_DeviceId_CAID {
	if x != nil {
		return x.Caids
	}
	return nil
}

func (x *Device_DeviceId) GetPaid() string {
	if x != nil {
		return x.Paid
	}
	return ""
}

type Device_DeviceId_CAID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                //caid版本
	Caid    string `protobuf:"bytes,2,opt,name=caid,proto3" json:"caid,omitempty"`                      // caid值
	CaidMd5 string `protobuf:"bytes,3,opt,name=caid_md5,json=caidMd5,proto3" json:"caid_md5,omitempty"` // caid_md5值
}

func (x *Device_DeviceId_CAID) Reset() {
	*x = Device_DeviceId_CAID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device_DeviceId_CAID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device_DeviceId_CAID) ProtoMessage() {}

func (x *Device_DeviceId_CAID) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device_DeviceId_CAID.ProtoReflect.Descriptor instead.
func (*Device_DeviceId_CAID) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Device_DeviceId_CAID) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Device_DeviceId_CAID) GetCaid() string {
	if x != nil {
		return x.Caid
	}
	return ""
}

func (x *Device_DeviceId_CAID) GetCaidMd5() string {
	if x != nil {
		return x.CaidMd5
	}
	return ""
}

type AdSlot_CreativeSpecs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeType     int32     `protobuf:"varint,1,opt,name=creative_type,json=creativeType,proto3" json:"creative_type,omitempty"`               // 必填。可接受的创意类型。1：单图，2：多图，3：视频
	AcceptedSizes    []*Size   `protobuf:"bytes,2,rep,name=accepted_sizes,json=acceptedSizes,proto3" json:"accepted_sizes,omitempty"`             // 必填。接受的素材尺寸，单位：像素
	VideoMinDuration int32     `protobuf:"varint,3,opt,name=video_min_duration,json=videoMinDuration,proto3" json:"video_min_duration,omitempty"` // 期望视频的最小长度（秒），0标识不限制
	VideoMaxDuration int32     `protobuf:"varint,4,opt,name=video_max_duration,json=videoMaxDuration,proto3" json:"video_max_duration,omitempty"` // 期望视频的最大长度（秒），0表示不限制
	Template         *Template `protobuf:"bytes,5,opt,name=template,proto3" json:"template,omitempty"`                                            // 选填，广告模版
}

func (x *AdSlot_CreativeSpecs) Reset() {
	*x = AdSlot_CreativeSpecs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdSlot_CreativeSpecs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSlot_CreativeSpecs) ProtoMessage() {}

func (x *AdSlot_CreativeSpecs) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSlot_CreativeSpecs.ProtoReflect.Descriptor instead.
func (*AdSlot_CreativeSpecs) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AdSlot_CreativeSpecs) GetCreativeType() int32 {
	if x != nil {
		return x.CreativeType
	}
	return 0
}

func (x *AdSlot_CreativeSpecs) GetAcceptedSizes() []*Size {
	if x != nil {
		return x.AcceptedSizes
	}
	return nil
}

func (x *AdSlot_CreativeSpecs) GetVideoMinDuration() int32 {
	if x != nil {
		return x.VideoMinDuration
	}
	return 0
}

func (x *AdSlot_CreativeSpecs) GetVideoMaxDuration() int32 {
	if x != nil {
		return x.VideoMaxDuration
	}
	return 0
}

func (x *AdSlot_CreativeSpecs) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

// 视频上下文
type SceneContext_VideoContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                           // 视频名称
	Url           string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                                             // 视频地址
	AreaId        string   `protobuf:"bytes,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`                         // 视频所属区域ID
	AreaName      string   `protobuf:"bytes,4,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`                   // 视频所属区域名称
	PublishYear   string   `protobuf:"bytes,5,opt,name=publish_year,json=publishYear,proto3" json:"publish_year,omitempty"`          // 出品年代
	Duration      float32  `protobuf:"fixed32,6,opt,name=duration,proto3" json:"duration,omitempty"`                                 // 视频时长（秒）
	Type          string   `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                           // 视频类型
	Category      string   `protobuf:"bytes,8,opt,name=category,proto3" json:"category,omitempty"`                                   // 分类
	Theme         string   `protobuf:"bytes,9,opt,name=theme,proto3" json:"theme,omitempty"`                                         // 题材
	UbixAlbumId   []string `protobuf:"bytes,10,rep,name=ubix_album_id,json=ubixAlbumId,proto3" json:"ubix_album_id,omitempty"`       // 剧目信息
	UbixChannelId []string `protobuf:"bytes,11,rep,name=ubix_channel_id,json=ubixChannelId,proto3" json:"ubix_channel_id,omitempty"` // 频道信息
}

func (x *SceneContext_VideoContext) Reset() {
	*x = SceneContext_VideoContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneContext_VideoContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneContext_VideoContext) ProtoMessage() {}

func (x *SceneContext_VideoContext) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneContext_VideoContext.ProtoReflect.Descriptor instead.
func (*SceneContext_VideoContext) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SceneContext_VideoContext) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneContext_VideoContext) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SceneContext_VideoContext) GetAreaId() string {
	if x != nil {
		return x.AreaId
	}
	return ""
}

func (x *SceneContext_VideoContext) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *SceneContext_VideoContext) GetPublishYear() string {
	if x != nil {
		return x.PublishYear
	}
	return ""
}

func (x *SceneContext_VideoContext) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SceneContext_VideoContext) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SceneContext_VideoContext) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SceneContext_VideoContext) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *SceneContext_VideoContext) GetUbixAlbumId() []string {
	if x != nil {
		return x.UbixAlbumId
	}
	return nil
}

func (x *SceneContext_VideoContext) GetUbixChannelId() []string {
	if x != nil {
		return x.UbixChannelId
	}
	return nil
}

type SceneContext_SearchContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKeyword string `protobuf:"bytes,1,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"` // 搜索关键词
}

func (x *SceneContext_SearchContext) Reset() {
	*x = SceneContext_SearchContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneContext_SearchContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneContext_SearchContext) ProtoMessage() {}

func (x *SceneContext_SearchContext) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneContext_SearchContext.ProtoReflect.Descriptor instead.
func (*SceneContext_SearchContext) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{8, 1}
}

func (x *SceneContext_SearchContext) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

type Ad_MaterialMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreativeId      string                      `protobuf:"bytes,1,opt,name=creative_id,json=creativeId,proto3" json:"creative_id,omitempty"`                  // 创意的唯一标志
	CreativeType    int32                       `protobuf:"varint,2,opt,name=creative_type,json=creativeType,proto3" json:"creative_type,omitempty"`           // 必填。该广告的创意类型，和Adslot对应。1：单图，2：多图，3：视频
	InteractionType int32                       `protobuf:"varint,3,opt,name=interaction_type,json=interactionType,proto3" json:"interaction_type,omitempty"`  // 广告支持的交互类型，和Adslot对象。3：应用内打开 4：download
	Title           string                      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                              // 可选。广告标题。信息流必填
	Description     string                      `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                  // 可选。广告描述。信息流必填
	AppName         string                      `protobuf:"bytes,6,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`                           // 可选。针对应用下载类广告。
	PackageName     string                      `protobuf:"bytes,7,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`               // 下载类广告（包括deeplink）。IOS填写bundleID，Android填写包名
	Icon            string                      `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`                                                // 广告创意的图标URL
	Image           []*Ad_MaterialMeta_Image    `protobuf:"bytes,9,rep,name=image,proto3" json:"image,omitempty"`                                              // 可选。创意类型为单图，只有一张图片；为多图时有多张图片。
	Video           *Ad_MaterialMeta_Video      `protobuf:"bytes,10,opt,name=video,proto3" json:"video,omitempty"`                                             // creative_type = 3 （视频）时必填，同时可以选择是否需要上报视频相关的事件
	TargetUrl       string                      `protobuf:"bytes,12,opt,name=target_url,json=targetUrl,proto3" json:"target_url,omitempty"`                    // 可选。点击创意的响应地址url。
	DownloadUrl     string                      `protobuf:"bytes,13,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`              // 应用直接下载url，只Android流量。
	DeeplinkUrl     string                      `protobuf:"bytes,14,opt,name=deeplink_url,json=deeplinkUrl,proto3" json:"deeplink_url,omitempty"`              // 应用吊起的直达链接。如果该url非空，优先使用该直达链接
	TrackingEvent   []*Ad_MaterialMeta_Tracking `protobuf:"bytes,15,rep,name=tracking_event,json=trackingEvent,proto3" json:"tracking_event,omitempty"`        // 用于各种打点的url
	WinNoticeUrl    []string                    `protobuf:"bytes,16,rep,name=win_notice_url,json=winNoticeUrl,proto3" json:"win_notice_url,omitempty"`         // 竞价模式时， win notice填写在这里
	DealId          string                      `protobuf:"bytes,17,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`                             // 在PD合作模式下返回
	Mp              *Ad_MaterialMeta_WxMpInfo   `protobuf:"bytes,19,opt,name=mp,proto3" json:"mp,omitempty"`                                                   // 小程序对象
	Source          string                      `protobuf:"bytes,20,opt,name=source,proto3" json:"source,omitempty"`                                           // 广告来源
	UniversalLink   string                      `protobuf:"bytes,21,opt,name=universal_link,json=universalLink,proto3" json:"universal_link,omitempty"`        // ios端调起连接 universal_link优先级高于deeplink
	AppChannel      string                      `protobuf:"bytes,22,opt,name=app_channel,json=appChannel,proto3" json:"app_channel,omitempty"`                 // DSP在应用商店推广应用的时候，应用商店分配给DSP的渠道号
	AppDesc         string                      `protobuf:"bytes,23,opt,name=app_desc,json=appDesc,proto3" json:"app_desc,omitempty"`                          // 可选。应用介绍。针对应用下载类广告。
	AppPackageSize  float32                     `protobuf:"fixed32,24,opt,name=app_package_size,json=appPackageSize,proto3" json:"app_package_size,omitempty"` // 可选。应用大小，单位MB。针对应用下载类广告。
	AppPublisher    string                      `protobuf:"bytes,25,opt,name=app_publisher,json=appPublisher,proto3" json:"app_publisher,omitempty"`           // 可选。APP开发者主体名称。针对应用下载类广告。
	DownAppVersion  string                      `protobuf:"bytes,26,opt,name=down_app_version,json=downAppVersion,proto3" json:"down_app_version,omitempty"`   // 可选。下载APP版本号。针对应用下载类广告。
	PrivacyLink     string                      `protobuf:"bytes,27,opt,name=privacy_link,json=privacyLink,proto3" json:"privacy_link,omitempty"`              // 可选。隐私协议URL。针对应用下载类广告。
	PermissionLink  string                      `protobuf:"bytes,28,opt,name=permission_link,json=permissionLink,proto3" json:"permission_link,omitempty"`     // 可选。用户权限URL。针对应用下载类广告。
	IntroduceLink   string                      `protobuf:"bytes,29,opt,name=introduce_link,json=introduceLink,proto3" json:"introduce_link,omitempty"`        // 可选。应用介绍URL。针对应用下载类广告。
	AppLcpNumber    string                      `protobuf:"bytes,30,opt,name=app_lcp_number,json=appLcpNumber,proto3" json:"app_lcp_number,omitempty"`         // 可选。下载应用备案号 LCP。针对应用下载类广告。
	AppSuitableAge  string                      `protobuf:"bytes,31,opt,name=app_suitable_age,json=appSuitableAge,proto3" json:"app_suitable_age,omitempty"`   // 可选。下载应用实用年龄。针对应用下载类广告。
}

func (x *Ad_MaterialMeta) Reset() {
	*x = Ad_MaterialMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad_MaterialMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad_MaterialMeta) ProtoMessage() {}

func (x *Ad_MaterialMeta) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad_MaterialMeta.ProtoReflect.Descriptor instead.
func (*Ad_MaterialMeta) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Ad_MaterialMeta) GetCreativeId() string {
	if x != nil {
		return x.CreativeId
	}
	return ""
}

func (x *Ad_MaterialMeta) GetCreativeType() int32 {
	if x != nil {
		return x.CreativeType
	}
	return 0
}

func (x *Ad_MaterialMeta) GetInteractionType() int32 {
	if x != nil {
		return x.InteractionType
	}
	return 0
}

func (x *Ad_MaterialMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Ad_MaterialMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *Ad_MaterialMeta) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Ad_MaterialMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Ad_MaterialMeta) GetImage() []*Ad_MaterialMeta_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Ad_MaterialMeta) GetVideo() *Ad_MaterialMeta_Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *Ad_MaterialMeta) GetTargetUrl() string {
	if x != nil {
		return x.TargetUrl
	}
	return ""
}

func (x *Ad_MaterialMeta) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *Ad_MaterialMeta) GetDeeplinkUrl() string {
	if x != nil {
		return x.DeeplinkUrl
	}
	return ""
}

func (x *Ad_MaterialMeta) GetTrackingEvent() []*Ad_MaterialMeta_Tracking {
	if x != nil {
		return x.TrackingEvent
	}
	return nil
}

func (x *Ad_MaterialMeta) GetWinNoticeUrl() []string {
	if x != nil {
		return x.WinNoticeUrl
	}
	return nil
}

func (x *Ad_MaterialMeta) GetDealId() string {
	if x != nil {
		return x.DealId
	}
	return ""
}

func (x *Ad_MaterialMeta) GetMp() *Ad_MaterialMeta_WxMpInfo {
	if x != nil {
		return x.Mp
	}
	return nil
}

func (x *Ad_MaterialMeta) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Ad_MaterialMeta) GetUniversalLink() string {
	if x != nil {
		return x.UniversalLink
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppChannel() string {
	if x != nil {
		return x.AppChannel
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppDesc() string {
	if x != nil {
		return x.AppDesc
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppPackageSize() float32 {
	if x != nil {
		return x.AppPackageSize
	}
	return 0
}

func (x *Ad_MaterialMeta) GetAppPublisher() string {
	if x != nil {
		return x.AppPublisher
	}
	return ""
}

func (x *Ad_MaterialMeta) GetDownAppVersion() string {
	if x != nil {
		return x.DownAppVersion
	}
	return ""
}

func (x *Ad_MaterialMeta) GetPrivacyLink() string {
	if x != nil {
		return x.PrivacyLink
	}
	return ""
}

func (x *Ad_MaterialMeta) GetPermissionLink() string {
	if x != nil {
		return x.PermissionLink
	}
	return ""
}

func (x *Ad_MaterialMeta) GetIntroduceLink() string {
	if x != nil {
		return x.IntroduceLink
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppLcpNumber() string {
	if x != nil {
		return x.AppLcpNumber
	}
	return ""
}

func (x *Ad_MaterialMeta) GetAppSuitableAge() string {
	if x != nil {
		return x.AppSuitableAge
	}
	return ""
}

// 图片素材信息。
type Ad_MaterialMeta_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`        // 图片地址
	Width  uint32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`   // 宽度，单位：像素
	Height uint32 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // 高度，单位：像素
}

func (x *Ad_MaterialMeta_Image) Reset() {
	*x = Ad_MaterialMeta_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad_MaterialMeta_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad_MaterialMeta_Image) ProtoMessage() {}

func (x *Ad_MaterialMeta_Image) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad_MaterialMeta_Image.ProtoReflect.Descriptor instead.
func (*Ad_MaterialMeta_Image) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *Ad_MaterialMeta_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Ad_MaterialMeta_Image) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Ad_MaterialMeta_Image) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// 视频素材信息
type Ad_MaterialMeta_Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string  `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                                       // 视频地址。必填
	CoverImage   string  `protobuf:"bytes,2,opt,name=cover_image,json=coverImage,proto3" json:"cover_image,omitempty"`       // 封面图地址。必填
	Duration     float32 `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`                           // 视频时长（秒），可选
	Size         float32 `protobuf:"fixed32,4,opt,name=size,proto3" json:"size,omitempty"`                                   // 视频大小，单位（kb）可选
	Width        int32   `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`                                  // 视频宽，建议必填
	Height       int32   `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`                                // 视频高，建议必填
	Bitrate      int32   `protobuf:"varint,7,opt,name=bitrate,proto3" json:"bitrate,omitempty"`                              // 视频码率,单位（Kbps）。可选
	Format       string  `protobuf:"bytes,8,opt,name=format,proto3" json:"format,omitempty"`                                 // 视频格式（扩展名）。建议必填
	CodingFormat string  `protobuf:"bytes,9,opt,name=coding_format,json=codingFormat,proto3" json:"coding_format,omitempty"` // 编码格式，可选（参考 https://en.wikipedia.org/wiki/Video_file_format）
}

func (x *Ad_MaterialMeta_Video) Reset() {
	*x = Ad_MaterialMeta_Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad_MaterialMeta_Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad_MaterialMeta_Video) ProtoMessage() {}

func (x *Ad_MaterialMeta_Video) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad_MaterialMeta_Video.ProtoReflect.Descriptor instead.
func (*Ad_MaterialMeta_Video) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10, 0, 1}
}

func (x *Ad_MaterialMeta_Video) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Ad_MaterialMeta_Video) GetCoverImage() string {
	if x != nil {
		return x.CoverImage
	}
	return ""
}

func (x *Ad_MaterialMeta_Video) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Ad_MaterialMeta_Video) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Ad_MaterialMeta_Video) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Ad_MaterialMeta_Video) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Ad_MaterialMeta_Video) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Ad_MaterialMeta_Video) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Ad_MaterialMeta_Video) GetCodingFormat() string {
	if x != nil {
		return x.CodingFormat
	}
	return ""
}

// *
// 支持的事件类型
// 101：曝光事件，创意曝光后，开发者侧回传此事件
// 201：点击事件，创意被用户点击后，开发者侧回传此事件
// 301：下载开始事件，系统开始执行下载后，开发者侧回传此事件
// 302：下载完成事件，app下载完成后，开发者侧回传此事件
// 303：用户开始安装事件，用户点击目标App开始安装，开发者侧回传此事件
// 304：安装完成事件，app下载并安装成功后，开发者侧回传此事件
// 401：deeplink打点，检测到目标app已安装
// 402：deeplink打点，检测到目标app未安装
// 403：deeplink打点，目标app已安装，并且调起成功
// 404：deeplink打点，目标app已安装，但是调起失败
// 5000: 视频开始播放
// 5025: 视频播放进度1/4
// 5050: 视频播放进度1/2
// 5075: 视频播放进度3/4
// 5100: 视频播放完成
type Ad_MaterialMeta_Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event int32    `protobuf:"varint,1,opt,name=event,proto3" json:"event,omitempty"`
	Urls  []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"` // 需要上报的url列表，如果is_support_macro=1，需要替换url里边包含的宏
}

func (x *Ad_MaterialMeta_Tracking) Reset() {
	*x = Ad_MaterialMeta_Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad_MaterialMeta_Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad_MaterialMeta_Tracking) ProtoMessage() {}

func (x *Ad_MaterialMeta_Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad_MaterialMeta_Tracking.ProtoReflect.Descriptor instead.
func (*Ad_MaterialMeta_Tracking) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10, 0, 2}
}

func (x *Ad_MaterialMeta_Tracking) GetEvent() int32 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *Ad_MaterialMeta_Tracking) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type Ad_MaterialMeta_WxMpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`        // 小程序原始ID 如:gh_d43f693ca31f
	AppId    string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"` // 填应用AppId
	Path     string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                // 拉起小程序页面的可带参路径，不填默认拉起小程序首页
}

func (x *Ad_MaterialMeta_WxMpInfo) Reset() {
	*x = Ad_MaterialMeta_WxMpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ubix_ssp_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ad_MaterialMeta_WxMpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ad_MaterialMeta_WxMpInfo) ProtoMessage() {}

func (x *Ad_MaterialMeta_WxMpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ubix_ssp_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ad_MaterialMeta_WxMpInfo.ProtoReflect.Descriptor instead.
func (*Ad_MaterialMeta_WxMpInfo) Descriptor() ([]byte, []int) {
	return file_ubix_ssp_proto_rawDescGZIP(), []int{10, 0, 3}
}

func (x *Ad_MaterialMeta_WxMpInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Ad_MaterialMeta_WxMpInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Ad_MaterialMeta_WxMpInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_ubix_ssp_proto protoreflect.FileDescriptor

var file_ubix_ssp_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x62, 0x69, 0x78, 0x5f, 0x73, 0x73, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x75, 0x62, 0x69, 0x78, 0x22, 0x4a, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x24,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x64,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x07, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x75, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x75, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x70, 0x76, 0x36, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x22,
	0xe3, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x73, 0x22, 0xdd, 0x03, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x65,
	0x6f, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x69,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x61, 0x69, 0x64, 0x41, 0x70, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0xed, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x74, 0x7a, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x7a, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8b, 0x0b, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x62, 0x69, 0x78, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x03, 0x64, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x77, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x77, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x70, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x64,
	0x70, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x6d, 0x62, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x70, 0x75, 0x4e, 0x75, 0x6d,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x76, 0x69, 0x76, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x76, 0x6f, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x56, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x16, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x68, 0x6d, 0x73, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x4f, 0x66, 0x48, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x15, 0x68, 0x75, 0x61, 0x77,
	0x65, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x67, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x56,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x41, 0x67, 0x1a, 0xa6, 0x04, 0x0a, 0x08, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x64, 0x66, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x76, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x65, 0x69, 0x5f, 0x6d, 0x64, 0x35, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x65, 0x69, 0x4d, 0x64, 0x35, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6f, 0x61, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x61, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x6d, 0x61, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x66, 0x69, 0x4d, 0x61, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x66, 0x61, 0x6d, 0x64,
	0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x66, 0x61, 0x6d, 0x64, 0x35,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x49, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x5f, 0x6d, 0x64,
	0x35, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x63, 0x4d, 0x64, 0x35, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x61, 0x69, 0x64, 0x4d, 0x64, 0x35, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69,
	0x66, 0x69, 0x5f, 0x6d, 0x61, 0x63, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x4d, 0x61, 0x63, 0x4d, 0x64, 0x35, 0x12, 0x30, 0x0a, 0x05,
	0x63, 0x61, 0x69, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x62,
	0x69, 0x78, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x2e, 0x43, 0x41, 0x49, 0x44, 0x52, 0x05, 0x63, 0x61, 0x69, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x1a, 0x4f, 0x0a, 0x04, 0x43, 0x41, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x69, 0x64,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x69, 0x64,
	0x4d, 0x64, 0x35, 0x22, 0x57, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x5f, 0x63, 0x70, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x70, 0x6d, 0x22, 0xde, 0x05, 0x0a,
	0x06, 0x41, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64,
	0x70, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x70, 0x6c, 0x12, 0x52, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41,
	0x64, 0x53, 0x6c, 0x6f, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x73, 0x52, 0x15, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x18,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x37,
	0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x74, 0x72, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x43, 0x74, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0xef, 0x01, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x63, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x31, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x62, 0x69,
	0x78, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a,
	0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x64, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x93, 0x04, 0x0a, 0x0c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x44, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x47, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a,
	0xbb, 0x02, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x68, 0x65, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x62, 0x69, 0x78, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x62, 0x69, 0x78, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x62, 0x69, 0x78, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x75, 0x62, 0x69, 0x78, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x36, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0xbf, 0x0d, 0x0a, 0x02, 0x41, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x64, 0x2e, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x85,
	0x0c, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x62, 0x69, 0x78,
	0x2e, 0x41, 0x64, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75,
	0x62, 0x69, 0x78, 0x2e, 0x41, 0x64, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d,
	0x65, 0x74, 0x61, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x65, 0x70, 0x6c, 0x69,
	0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x45, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x62, 0x69, 0x78, 0x2e, 0x41, 0x64, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x77, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x02, 0x6d,
	0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x62, 0x69, 0x78, 0x2e, 0x41,
	0x64, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x57,
	0x78, 0x4d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x63, 0x70, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x4c,
	0x63, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x53, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x67, 0x65, 0x1a, 0x47, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0xef, 0x01, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x34, 0x0a,
	0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x1a, 0x51, 0x0a, 0x08, 0x57, 0x78, 0x4d, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x2a, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x08, 0x61,
	0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x75, 0x62,
	0x69, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ubix_ssp_proto_rawDescOnce sync.Once
	file_ubix_ssp_proto_rawDescData = file_ubix_ssp_proto_rawDesc
)

func file_ubix_ssp_proto_rawDescGZIP() []byte {
	file_ubix_ssp_proto_rawDescOnce.Do(func() {
		file_ubix_ssp_proto_rawDescData = protoimpl.X.CompressGZIP(file_ubix_ssp_proto_rawDescData)
	})
	return file_ubix_ssp_proto_rawDescData
}

var file_ubix_ssp_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_ubix_ssp_proto_goTypes = []interface{}{
	(*Size)(nil),                       // 0: ubix.Size
	(*BidRequest)(nil),                 // 1: ubix.BidRequest
	(*User)(nil),                       // 2: ubix.User
	(*App)(nil),                        // 3: ubix.App
	(*Device)(nil),                     // 4: ubix.Device
	(*TradingMode)(nil),                // 5: ubix.TradingMode
	(*AdSlot)(nil),                     // 6: ubix.AdSlot
	(*Template)(nil),                   // 7: ubix.Template
	(*SceneContext)(nil),               // 8: ubix.SceneContext
	(*BidResponse)(nil),                // 9: ubix.BidResponse
	(*Ad)(nil),                         // 10: ubix.Ad
	(*App_Geo)(nil),                    // 11: ubix.App.Geo
	(*Device_DeviceId)(nil),            // 12: ubix.Device.DeviceId
	(*Device_DeviceId_CAID)(nil),       // 13: ubix.Device.DeviceId.CAID
	(*AdSlot_CreativeSpecs)(nil),       // 14: ubix.AdSlot.CreativeSpecs
	(*SceneContext_VideoContext)(nil),  // 15: ubix.SceneContext.VideoContext
	(*SceneContext_SearchContext)(nil), // 16: ubix.SceneContext.SearchContext
	(*Ad_MaterialMeta)(nil),            // 17: ubix.Ad.MaterialMeta
	(*Ad_MaterialMeta_Image)(nil),      // 18: ubix.Ad.MaterialMeta.Image
	(*Ad_MaterialMeta_Video)(nil),      // 19: ubix.Ad.MaterialMeta.Video
	(*Ad_MaterialMeta_Tracking)(nil),   // 20: ubix.Ad.MaterialMeta.Tracking
	(*Ad_MaterialMeta_WxMpInfo)(nil),   // 21: ubix.Ad.MaterialMeta.WxMpInfo
}
var file_ubix_ssp_proto_depIdxs = []int32{
	2,  // 0: ubix.BidRequest.user:type_name -> ubix.User
	3,  // 1: ubix.BidRequest.app:type_name -> ubix.App
	4,  // 2: ubix.BidRequest.device:type_name -> ubix.Device
	6,  // 3: ubix.BidRequest.ad_slots:type_name -> ubix.AdSlot
	11, // 4: ubix.App.geo:type_name -> ubix.App.Geo
	12, // 5: ubix.Device.did:type_name -> ubix.Device.DeviceId
	0,  // 6: ubix.Device.screen_size:type_name -> ubix.Size
	14, // 7: ubix.AdSlot.accepted_creative_specs:type_name -> ubix.AdSlot.CreativeSpecs
	5,  // 8: ubix.AdSlot.trading_mode:type_name -> ubix.TradingMode
	8,  // 9: ubix.AdSlot.scene_context:type_name -> ubix.SceneContext
	15, // 10: ubix.SceneContext.video_context:type_name -> ubix.SceneContext.VideoContext
	16, // 11: ubix.SceneContext.search_context:type_name -> ubix.SceneContext.SearchContext
	10, // 12: ubix.BidResponse.ads:type_name -> ubix.Ad
	17, // 13: ubix.Ad.creative:type_name -> ubix.Ad.MaterialMeta
	13, // 14: ubix.Device.DeviceId.caids:type_name -> ubix.Device.DeviceId.CAID
	0,  // 15: ubix.AdSlot.CreativeSpecs.accepted_sizes:type_name -> ubix.Size
	7,  // 16: ubix.AdSlot.CreativeSpecs.template:type_name -> ubix.Template
	18, // 17: ubix.Ad.MaterialMeta.image:type_name -> ubix.Ad.MaterialMeta.Image
	19, // 18: ubix.Ad.MaterialMeta.video:type_name -> ubix.Ad.MaterialMeta.Video
	20, // 19: ubix.Ad.MaterialMeta.tracking_event:type_name -> ubix.Ad.MaterialMeta.Tracking
	21, // 20: ubix.Ad.MaterialMeta.mp:type_name -> ubix.Ad.MaterialMeta.WxMpInfo
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_ubix_ssp_proto_init() }
func file_ubix_ssp_proto_init() {
	if File_ubix_ssp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ubix_ssp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradingMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App_Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device_DeviceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device_DeviceId_CAID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdSlot_CreativeSpecs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneContext_VideoContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneContext_SearchContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad_MaterialMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad_MaterialMeta_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad_MaterialMeta_Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad_MaterialMeta_Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ubix_ssp_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ad_MaterialMeta_WxMpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ubix_ssp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ubix_ssp_proto_goTypes,
		DependencyIndexes: file_ubix_ssp_proto_depIdxs,
		MessageInfos:      file_ubix_ssp_proto_msgTypes,
	}.Build()
	File_ubix_ssp_proto = out.File
	file_ubix_ssp_proto_rawDesc = nil
	file_ubix_ssp_proto_goTypes = nil
	file_ubix_ssp_proto_depIdxs = nil
}
